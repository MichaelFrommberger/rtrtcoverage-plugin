options{  JDK_VERSION = "1.5";  static = false;}PARSER_BEGIN(TioReader)package com.thalesgroup.rtrtcoverage.tioreader;import com.thalesgroup.rtrtcoverage.tioreader.CoverageLine;import com.thalesgroup.rtrtcoverage.tioreader.CoverageTest;import com.thalesgroup.rtrtcoverage.tioreader.CoverageFile;

public class TioReader{  public CoverageTest readCoverageForFileIntoTest() throws TioException {	CoverageTest coverageTest = null;		try	{		coverageTest =  StartTest();	}	catch (Throwable e)	{		//System.out.println(e.getMessage());		//e.printStackTrace();		throw new TioException(e.getMessage());	}	finally	{		return coverageTest;	}  }  public CoverageFile readCoverageForFile() throws TioException  {    CoverageFile coverageFile = null;		try	{		coverageFile =  StartFile();	}	catch (Throwable e)	{		//System.out.println(e.getMessage());		//e.printStackTrace();		throw new TioException(e.getMessage());	}	finally	{		return coverageFile;	}  }
  }PARSER_END(TioReader)SKIP :{  " "| "\t"| "\n"| "\r"}TOKEN :{  < NUM : ([ "0"-"9", "a"-"f" ])+ >|   < VAR : "\"" ([ "a"-"z", "A"-"Z", "-", "_", ",", ":", "/", " ", "0"-"9" ])+ "\"" >}TOKEN :{  < NT : "NT" >|   < DT : "DT" >|   < FT : "FT" >|   < DC : "DC" >|   < TP : "TP" >|   < TA : "TA" >|   < TE : "TE" >|   < TB : "TB" >}CoverageTest StartTest() :{	CoverageTest coverageTest = new CoverageTest();}{	(			NT()		DT()		(			FT()			DC()			(			   {			     CoverageLine coverageLine = null;			   }			   coverageLine = TESTS()			   {					coverageTest.add(coverageLine);			   }			)*		)*	)+	<EOF>	{	  return coverageTest;	}}CoverageFile StartFile() :{	CoverageFile coverageFile = new CoverageFile();}{	(			NT()		DT()		(			FT()			DC()			(			   {			     CoverageLine coverageLine = null;			   }			   coverageLine = TESTS()			   {					coverageFile.add(coverageLine);			   }			)*		)*	)+	<EOF>	{	  return coverageFile;	}}String NT() :{	String nameTest;	Token  name;}{	< NT >	name = < VAR >	< NUM > [ < NUM > ]	{	  nameTest = name.image;	  int lastIndex = nameTest.lastIndexOf('/');	  lastIndex++;	  nameTest = nameTest.substring(lastIndex).replace("\"","");	  return nameTest;	}}void DT() :{}{  < DT >  < VAR >}String FT() :{  Token address;}{	< FT >	address = < NUM >  {    return address.image;  }}String DC():{	Token address;}{	< DC >	address = < NUM >  {    return address.image;  }}CoverageLine TESTS() :{  CoverageLine coverageLine = null;}{  	coverageLine = TP()	{	   return coverageLine;	}	 |	coverageLine = TA()	{	   return coverageLine;	}	 | 	coverageLine = TB() 	{	   return coverageLine;	}	 |	coverageLine = TE()	{	   return coverageLine;	}}CoverageLine TP() :{  CoverageLine coverageLine = new CoverageLine();  Token tp;  Token number;}{  tp = < TP >  number = < NUM >  {    coverageLine.setType(tp.image);    coverageLine.setNumber(number.image);    return coverageLine;  }}CoverageLine TA() :{  CoverageLine coverageLine = new CoverageLine();  Token ta;  Token number;}{  ta = < TA >  number = < NUM >  {    coverageLine.setType(ta.image);    coverageLine.setNumber(number.image);    return coverageLine;  }}CoverageLine TB() :{  CoverageLine coverageLine = new CoverageLine();  Token tb;  Token number;}{  tb = < TB >  number = < NUM >  {    coverageLine.setType(tb.image);    coverageLine.setNumber(number.image);    return coverageLine;  }}CoverageLine TE() :{  CoverageLine coverageLine = new CoverageLine();  Token te;  Token number;}{  te = < TE >  number = < NUM >  {    coverageLine.setType(te.image);    coverageLine.setNumber(number.image);    return coverageLine;  }}    