VE 3.0d CCOV CMCDC #i3
FC "LBSTR_ADD.C" "D:\\VIEWSNAP\\IC_CDS_A400M\\CDS_A400M_DEV\\COMMON\\LBSTRING\\SRC\\"
FD 1285925346
TC AP BS BT BI BL CO CC
CE 0 "lbstr_add" "*par_origin_address != 0" 74 74
BL 0 simple "lbstr_add" /while 75 79
BL 1 logical "lbstr_add" /while/0 74 79
BL 2 logical "lbstr_add" /while/1 74 79
BL 3 logical "lbstr_add" /while/2+ 74 79
BL 4 simple "lbstr_add" / 72 86
DC 2069302085
@RIK
  TOKEN="CCOV CMCDC"
  SRC="LBSTR_ADD.C"
  DIR="D:\VIEWSNAP\IC_CDS_A400M\CDS_A400M_DEV\COMMON\LBSTRING\SRC\"
  DATE=1285925346
  CHECKSUM=2069302085
  SUMS
   ("&Functions",
    "-&Exits",
    "Functions and exits"),
   ("&Calls"=10),
   ("Statement &blocks"=20,
    "-&Implicit blocks"=21,
    "Decisions"=20+21,
    "&Loops"=22),
   ("Basic &conditions"=30,
    "&Modified conditions"=31,
    "M&ultiple conditions"=32)
  ERRORS
    32="a source object was not linked with the right runtime object (check instrumentation mode)",
    49="a composition of conditions evaluates in an unexpected result, contact your vendor",
    50="a composition of conditions reached with an unexpected input vector, contact your vendor"
NODE TYPE=FILE NAME="LBSTR_ADD.C"@@COMMENT@/******************************************************************************
 **
 **                                   ==============
 **                                   IDENTIFICATION
 **                                   ==============
 **
 **
 **
 **  Filename            : LBSTR_ADD.c
 **
 **  Author/ Company     : B.Palomino / THALES Avionics
 **
 **  Creation date       : 14/06/2004
 **
 **  Copyright statement : Copyright (C); 2004
 **                        THALES Avionics
 **
 **  Module description  : Add string 2 to string 1 and return end of string1
 **						   address.
 **
 *****************************************************************************/@/COMMENT@


@COMMENT@/******************************************************************************
 **                           Project specific includes
 *****************************************************************************/@/COMMENT@
@COMMENT@/* MACS TYPES */@/COMMENT@


@COMMENT@/* SA TYPES */@/COMMENT@
@COMMENT@#include "apsw_basic_types_c.h"@/COMMENT@


@COMMENT@/* PLATFORM TYPES */@/COMMENT@


@COMMENT@/* CALLED CSU TYPES */@/COMMENT@


@COMMENT@/* CALLED CSU PROTOTYPES */@/COMMENT@



@COMMENT@/******************************************************************************
 **                           Module specific includes
 *****************************************************************************/@/COMMENT@

@COMMENT@#include "LBSTR_ADD.p"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Local file declarations
 *****************************************************************************/@/COMMENT@


@COMMENT@/******************************************************************************
 ***** 
 ***** void lbstr_add
 ***** 
 ***** Description : Add string 2 to string 1 and return end of string1 
 *****				address.
 ***** 
 ***** Input :
 *****             T_char 	*par_origin_address : origin adress
 *****
 ***** Output : 
 *****             T_char 	*par_destination_address : destination adress
 ***** 
 *****************************************************************************/@/COMMENT@
T_char @NODE TYPE=FUNCTION NAME="lbstr_add"@*@LINK NAME="lbstr_add"@lbstr_add (
	@COMMENT@/* OUT */@/COMMENT@	T_char 	*par_destination_address,
	@COMMENT@/* IN  */@/COMMENT@	T_char 	*par_origin_address)
@BRANCH MARK=TB ID=4 SUM=20@{
	@COMMENT@/*$ DO WHILE THE END OF THE ORIGIN MEMORY AREA NOT REACHED */@/COMMENT@
	@POPUP@while@-POPUP@loop branches :
@BRANCH MARK=TB ID=1 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=2 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=3 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (@POPUP@*par_origin_address != 0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=0 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=1 SUM=30@False@/BRANCH@@/POPUP@)
	@BRANCH MARK=TB ID=0 SUM=20@{
		@COMMENT@/*$ COPY A BYTE FROM THE ORIGIN MEMORY INTO THE DESTINATION MEMORY */@/COMMENT@
		(*par_destination_address++) = (*par_origin_address++);

	}@/BRANCH@
	@COMMENT@/*$ ENDO WHILE */@/COMMENT@

	*par_destination_address = 0;

	@COMMENT@/*$ RETURN */@/COMMENT@
	return par_destination_address;@SHORTCUT MARK=TB ID=4@
}@/BRANCH@@/NODE@
@/NODE /RIK@
