VE 3.0d CCOV CMCDC #i3
FC "LBFL_MNG.C" "D:\\VIEWSNAP\\IC_CDS_A400M\\CDS_A400M_DEV\\COMMON\\LBFL\\SRC\\"
FD 1285925333
TC AP BS BT BI BL CO CC
AP 0 "lbfl_mng" "lbport_record_LR_historix" 141 141
CE 0 "lbfl_mng" "e_lbfl_failure_init_status = ..." 180 180
CE 2 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 183 183
CE 4 "lbfl_mng" "tr_lbfl_global_error_mng[ ..." 184 184
CE 6 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 185 185
CC 8 3 2 4 6 4 TXXFTTFTFFFX 2
CE 12 "lbfl_mng" "loc_ul_masked_error_id" 191 191
CE 14 "lbfl_mng" "loc_ul_masked_error_id < ( ..." 197 197
BL 0 simple "lbfl_mng" /then/then/then/then 198 201
AP 1 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 206 207
BL 1 simple "lbfl_mng" /then/then/then/else 203 208
BL 2 simple "lbfl_mng" /then/then/then 192 219
CE 16 "lbfl_mng" "loc_ul_masked_error_id" 224 224
CE 18 "lbfl_mng" "loc_pr_fsc_error_config == ( ..." 238 238
AP 2 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 241 242
BL 3 simple "lbfl_mng" /then/then/else/then/then 239 243
BL 4 simple "lbfl_mng" /then/then/else/then/else 245 248
BL 5 simple "lbfl_mng" /then/then/else/then 225 250
CE 20 "lbfl_mng" "loc_ul_masked_error_id >  ..." 265 265
AP 3 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 269 270
BL 6 simple "lbfl_mng" /then/then/else/else/then 266 271
BL 7 simple "lbfl_mng" /then/then/else/else/else 273 276
BL 8 simple "lbfl_mng" /then/then/else/else 253 278
BL 9 simple "lbfl_mng" /then/then/else 221 280
CE 22 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 287 287
AP 4 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 291 292
BL 10 simple "lbfl_mng" /then/then/then 288 294
BL 11 simple "lbfl_mng" /then/then/else 296 299
AP 5 "lbfl_mng" "lbfl_manage_ctx_data" 303 303
AP 6 "lbfl_mng" "lbfl_ctxt_data_to_ctxt_area_copy" 308 308
AP 7 "lbfl_mng" "lbfl_fsc_index" 314 318
CE 24 "lbfl_mng" "loc_b_return_fsc_index == 0UL" 321 321
AP 8 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 326 327
BL 12 simple "lbfl_mng" /then/then/then 322 329
BL 13 simple "lbfl_mng" /then/then/else 331 334
CE 26 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 339 339
AP 9 "lbfl_mng" "lbfl_fsc_index" 342 346
CE 28 "lbfl_mng" "loc_b_return_fsc_index == 0UL" 348 348
AP 10 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 352 353
BL 14 simple "lbfl_mng" /then/then/then/then 349 355
BL 15 simple "lbfl_mng" /then/then/then/else 357 360
BL 16 simple "lbfl_mng" /then/then/then 340 362
BL 17 simple "lbfl_mng" /then/then/else 364 367
CE 30 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 372 372
CE 32 "lbfl_mng" "loc_ul_masked_error_id != 0xE000" 373 373
CE 34 "lbfl_mng" "loc_ul_masked_error_id != 0xF000" 374 374
CE 36 "lbfl_mng" "loc_ul_masked_error_id != 0x7000" 375 375
CC 38 4 30 32 34 36 5 TTTTTTTFTTFXTFXXFXXX 1
CE 43 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 378 378
CE 45 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 381 381
AP 11 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 384 385
BL 18 simple "lbfl_mng" /then/then/then/then/then 382 387
BL 19 simple "lbfl_mng" /then/then/then/then/else 389 392
BL 20 simple "lbfl_mng" /then/then/then/then 379 394
BL 21 simple "lbfl_mng" /then/then/then/else 396 399
CE 47 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 403 403
CE 49 "lbfl_mng" "*loc_pul_fsc_error_detection ..." 417 417
CE 51 "lbfl_mng" "loc_pr_error_confirm-> ..." 432 432
CE 53 "lbfl_mng" "loc_pr_error_confirm-> ..." 433 433
CC 55 2 51 53 3 TXFTFF 2
CE 58 "lbfl_mng" "loc_pr_error_confirm-> ..." 442 442
CE 60 "lbfl_mng" "loc_pr_error_confirm-> ..." 443 443
CE 62 "lbfl_mng" "loc_pr_error_confirm-> ..." 444 444
CC 64 3 58 60 62 4 TTTTTFTFXFXX 1
CE 68 "lbfl_mng" "loc_ul_masked_error_id != 0" 449 449
CE 70 "lbfl_mng" "loc_ul_masked_error_id != 1" 450 450
CE 72 "lbfl_mng" "loc_pr_error_confirm-> ..." 451 451
CE 74 "lbfl_mng" "loc_ul_masked_error_id == 0" 452 452
CE 76 "lbfl_mng" "loc_ul_masked_error_id == 1" 453 453
CE 78 "lbfl_mng" "loc_pr_error_confirm-> ..." 454 454
CC 80 6 68 70 72 74 76 78 16 TTTXXXTTFTXTTTFFTTTFXTXTTFXFTTFXXTXTFXXFTTTTFTXFTTFFTFTTFFFXTFXTXFTFXFTFTFXFFXFXXTXFFXXFTFFXXFFX 7
BL 22 simple "lbfl_mng" /then/then/then/then/then/do/then/then/then 456 462
BL 23 simple "lbfl_mng" /then/then/then/then/then/do/then/then/else 464 467
BL 24 simple "lbfl_mng" /then/then/then/then/then/do/then/then 445 468
BL 25 simple "lbfl_mng" /then/then/then/then/then/do/then/else 470 473
BL 26 simple "lbfl_mng" /then/then/then/then/then/do/then 434 474
BL 27 simple "lbfl_mng" /then/then/then/then/then/do/else 476 479
BL 28 simple "lbfl_mng" /then/then/then/then/then/do 426 485
CE 96 "lbfl_mng" "loc_b_found == 0UL" 485 485
CE 98 "lbfl_mng" "loc_ul_error_mng_index <  ..." 486 486
CE 100 "lbfl_mng" "loc_ul_error_nb_already_foun ..." 487 487
CC 102 3 96 98 100 4 TTTTTFTFXFXX 1
BL 29 logical "lbfl_mng" /then/then/then/then/then/do/1 425 487
BL 30 logical "lbfl_mng" /then/then/then/then/then/do/2+ 425 487
BL 31 simple "lbfl_mng" /then/then/then/then/then 418 489
BL 32 simple "lbfl_mng" /then/then/then/then/else 491 494
CE 106 "lbfl_mng" "loc_b_found == 0UL" 498 498
CE 108 "lbfl_mng" "loc_pr_error_confirm-> ..." 514 514
CE 110 "lbfl_mng" "loc_pr_error_confirm-> ..." 515 515
CC 112 2 108 110 3 TTTFFX 1
CE 115 "lbfl_mng" "loc_ul_masked_error_id == 0" 530 530
CE 117 "lbfl_mng" "loc_ul_masked_error_id == 1" 531 531
CC 119 2 115 117 3 TXFTFF 2
BL 33 simple "lbfl_mng" /then/then/then/then/then/do/then/then 532 534
BL 34 simple "lbfl_mng" /then/then/then/then/then/do/then/else 536 538
BL 35 simple "lbfl_mng" /then/then/then/then/then/do/then 516 539
BL 36 simple "lbfl_mng" /then/then/then/then/then/do/else 541 544
BL 37 simple "lbfl_mng" /then/then/then/then/then/do 510 550
CE 122 "lbfl_mng" "loc_b_found == 0UL" 550 550
CE 124 "lbfl_mng" "loc_ul_error_mng_index <  ..." 550 550
CC 126 2 122 124 3 TTTFFX 1
BL 38 logical "lbfl_mng" /then/then/then/then/then/do/1 509 550
BL 39 logical "lbfl_mng" /then/then/then/then/then/do/2+ 509 550
CE 129 "lbfl_mng" "loc_b_found == 0UL" 553 553
AP 12 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 556 557
BL 40 simple "lbfl_mng" /then/then/then/then/then/then 554 559
BL 41 simple "lbfl_mng" /then/then/then/then/then/else 561 564
BL 42 simple "lbfl_mng" /then/then/then/then/then 499 565
BL 43 simple "lbfl_mng" /then/then/then/then/else 567 570
BL 44 simple "lbfl_mng" /then/then/then/then 404 571
BL 45 simple "lbfl_mng" /then/then/then/else 573 576
CE 131 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 579 579
CA 133 "lbfl_mng" "case K_LBFL_E_NOT_APPEARED" 598 598
BL 46 simple "lbfl_mng" /then/then/then/then/case 598 598
AP 13 "lbfl_mng" "lbfl_filt" 608 608
CA 134 "lbfl_mng" "case K_LBFL_E_DETECTED" 613 613
BL 47 simple "lbfl_mng" /then/then/then/then/case 613 613
AP 14 "lbfl_mng" "lbfl_filt" 616 616
CA 135 "lbfl_mng" "case K_LBFL_E_CONFIRMED" 621 621
BL 48 simple "lbfl_mng" /then/then/then/then/case 621 621
AP 15 "lbfl_mng" "lbfl_filt" 624 624
CA 136 "lbfl_mng" "default" 629 629
BL 49 simple "lbfl_mng" /then/then/then/then/default 629 629
AP 16 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 634 635
BL 50 simple "lbfl_mng" /then/then/then/then 580 640
BL 51 simple "lbfl_mng" /then/then/then/else 642 645
CE 137 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 649 649
CE 139 "lbfl_mng" "loc_b_filt" 654 654
CE 141 "lbfl_mng" "loc_pr_error_confirm-> ..." 655 655
CE 143 "lbfl_mng" "loc_r_lbfl_write_arg. ..." 656 656
CC 145 3 139 141 143 4 TXXFTTFTFFFX 2
CE 149 "lbfl_mng" "loc_b_filt ==  ..." 660 660
CA 151 "lbfl_mng" "case K_LBFL_E_WARNING" 665 665
CA 152 "lbfl_mng" "case  ..." 666 666
BL 52 simple "lbfl_mng" /then/then/then/then/then/case 666 666
AP 17 "lbfl_mng" "lbfl_mng_write" 670 671
CA 153 "lbfl_mng" "case K_LBFL_E_FATAL" 675 675
BL 53 simple "lbfl_mng" /then/then/then/then/then/case 675 675
AP 18 "lbfl_mng" "lbfl_mng_write" 678 679
AP 19 "lbfl_mng" "RAISE_APPLICATION_ERROR" 684 687
CA 154 "lbfl_mng" "default" 691 691
BL 54 simple "lbfl_mng" /then/then/then/then/then/default 691 691
AP 20 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 695 696
BL 55 simple "lbfl_mng" /then/then/then/then/then 661 701
BL 56 simple "lbfl_mng" /then/then/then/then/else 704 707
BL 57 simple "lbfl_mng" /then/then/then/then 650 709
BL 58 simple "lbfl_mng" /then/then/then/else 712 715
BL 59 simple "lbfl_mng" /then/then/then 376 719
CE 155 "lbfl_mng" "loc_b_lbfl_mng_fail == 0UL" 731 731
CA 157 "lbfl_mng" "case K_LBFL_E_WARNING" 743 743
CA 158 "lbfl_mng" "case  ..." 744 744
BL 60 simple "lbfl_mng" /then/then/else/then/case 744 744
AP 21 "lbfl_mng" "lbfl_mng_write" 748 749
CA 159 "lbfl_mng" "case K_LBFL_E_FATAL" 753 753
BL 61 simple "lbfl_mng" /then/then/else/then/case 753 753
AP 22 "lbfl_mng" "lbfl_mng_write" 756 757
AP 23 "lbfl_mng" "RAISE_APPLICATION_ERROR" 762 765
CA 160 "lbfl_mng" "default" 769 769
BL 62 simple "lbfl_mng" /then/then/else/then/default 769 769
AP 24 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 773 774
BL 63 simple "lbfl_mng" /then/then/else/then 732 780
BL 64 simple "lbfl_mng" /then/then/else/else 783 786
BL 65 simple "lbfl_mng" /then/then/else 721 787
BL 66 simple "lbfl_mng" /then/then 186 791
AP 25 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 797 798
BL 67 simple "lbfl_mng" /then/else 793 799
BL 68 simple "lbfl_mng" /then 181 801
AP 26 "lbfl_mng" "lbfl_mng_lbfl_mng_internal_error" 807 808
BL 69 simple "lbfl_mng" /else 804 809
BL 70 simple "lbfl_mng" / 114 814
CE 161 "lbfl_fsc_index" "lbstr_cmp (par_puc_fsc_name, ..." 851 851
AP 27 "lbfl_fsc_index" "lbstr_cmp" 851 851
BL 71 simple "lbfl_fsc_index" /then 852 855
CE 163 "lbfl_fsc_index" "par_ul_process_id == 0" 858 858
CE 165 "lbfl_fsc_index" "tr_process_error_config[ ..." 866 866
CE 167 "lbfl_fsc_index" "lbfl_fsc_index_limited ( ..." 868 871
AP 28 "lbfl_fsc_index" "lbfl_fsc_index_limited" 868 871
BL 72 simple "lbfl_fsc_index" /else/then/do/then/then 872 877
BL 73 simple "lbfl_fsc_index" /else/then/do/then/else 879 882
BL 74 simple "lbfl_fsc_index" /else/then/do/then 867 883
BL 75 simple "lbfl_fsc_index" /else/then/do/else 885 888
BL 76 simple "lbfl_fsc_index" /else/then/do 862 891
CE 169 "lbfl_fsc_index" "loc_b_found == 0UL" 891 891
CE 171 "lbfl_fsc_index" "loc_ul_process_id < 5" 891 891
CC 173 2 169 171 3 TTTFFX 1
BL 77 logical "lbfl_fsc_index" /else/then/do/1 861 891
BL 78 logical "lbfl_fsc_index" /else/then/do/2+ 861 891
BL 79 simple "lbfl_fsc_index" /else/then 859 892
CE 176 "lbfl_fsc_index" "tr_process_error_config[ ..." 895 895
CE 178 "lbfl_fsc_index" "lbfl_fsc_index_limited ( ..." 897 900
AP 29 "lbfl_fsc_index" "lbfl_fsc_index_limited" 897 900
BL 80 simple "lbfl_fsc_index" /else/else/then/then 901 906
BL 81 simple "lbfl_fsc_index" /else/else/then/else 908 911
BL 82 simple "lbfl_fsc_index" /else/else/then 896 912
BL 83 simple "lbfl_fsc_index" /else/else/else 914 916
BL 84 simple "lbfl_fsc_index" /else/else 894 917
BL 85 simple "lbfl_fsc_index" /else 857 918
BL 86 simple "lbfl_fsc_index" / 846 921
CE 180 "lbfl_fsc_index_limited" "lbstr_cmp (par_puc_fsc_name, ..." 958 958
AP 30 "lbfl_fsc_index_limited" "lbstr_cmp" 958 958
BL 87 simple "lbfl_fsc_index_limited" /do/then 959 963
BL 88 simple "lbfl_fsc_index_limited" /do/else 965 968
BL 89 simple "lbfl_fsc_index_limited" /do 957 970
CE 182 "lbfl_fsc_index_limited" "loc_b_found == 0UL" 970 970
CE 184 "lbfl_fsc_index_limited" "loc_ul_fsc_index <  ..." 970 970
CC 186 2 182 184 3 TTTFFX 1
BL 90 logical "lbfl_fsc_index_limited" /do/1 956 970
BL 91 logical "lbfl_fsc_index_limited" /do/2+ 956 970
BL 92 simple "lbfl_fsc_index_limited" / 951 973
AP 31 "lbfl_mng_lbfl_mng_internal_error" "lbfl_save_previous_error_arg" 1006 1006
AP 32 "lbfl_mng_lbfl_mng_internal_error" "lbfl_mng_lbfl_internal_error" 1007 1007
BL 93 simple "lbfl_mng_lbfl_mng_internal_error" / 1005 1009
CE 189 "lbfl_manage_ctx_data" "par_pr_lbfl_write_arg-> ..." 1042 1042
CE 191 "lbfl_manage_ctx_data" "par_pr_lbfl_write_arg-> ..." 1044 1044
AP 33 "lbfl_manage_ctx_data" "lbfl_mng_lbfl_mng_internal_error" 1050 1051
BL 94 simple "lbfl_manage_ctx_data" /then/then 1045 1054
BL 95 simple "lbfl_manage_ctx_data" /then/else 1056 1058
BL 96 simple "lbfl_manage_ctx_data" /then 1043 1061
CE 193 "lbfl_manage_ctx_data" "par_pr_lbfl_write_arg-> ..." 1065 1065
CE 195 "lbfl_manage_ctx_data" "loc_i < par_pr_lbfl_write_ar ..." 1068 1068
BL 97 simple "lbfl_manage_ctx_data" /else/then/for 1069 1073
BL 98 logical "lbfl_manage_ctx_data" /else/then/for/0 1068 1073
BL 99 logical "lbfl_manage_ctx_data" /else/then/for/1 1068 1073
BL 100 logical "lbfl_manage_ctx_data" /else/then/for/2+ 1068 1073
BL 101 simple "lbfl_manage_ctx_data" /else/then 1066 1074
CE 197 "lbfl_manage_ctx_data" "loc_i < 84" 1080 1080
BL 102 simple "lbfl_manage_ctx_data" /else/else/for 1081 1083
BL 103 logical "lbfl_manage_ctx_data" /else/else/for/0 1080 1083
BL 104 logical "lbfl_manage_ctx_data" /else/else/for/1 1080 1083
BL 105 logical "lbfl_manage_ctx_data" /else/else/for/2+ 1080 1083
AP 34 "lbfl_manage_ctx_data" "lbfl_mng_lbfl_mng_internal_error" 1086 1087
BL 106 simple "lbfl_manage_ctx_data" /else/else 1076 1090
BL 107 simple "lbfl_manage_ctx_data" /else 1063 1091
BL 108 simple "lbfl_manage_ctx_data" / 1037 1099
DC 1853562428
@RIK
  TOKEN="CCOV CMCDC"
  SRC="LBFL_MNG.C"
  DIR="D:\VIEWSNAP\IC_CDS_A400M\CDS_A400M_DEV\COMMON\LBFL\SRC\"
  DATE=1285925333
  CHECKSUM=1853562428
  SUMS
   ("&Functions",
    "-&Exits",
    "Functions and exits"),
   ("&Calls"=10),
   ("Statement &blocks"=20,
    "-&Implicit blocks"=21,
    "Decisions"=20+21,
    "&Loops"=22),
   ("Basic &conditions"=30,
    "&Modified conditions"=31,
    "M&ultiple conditions"=32)
  ERRORS
    32="a source object was not linked with the right runtime object (check instrumentation mode)",
    49="a composition of conditions evaluates in an unexpected result, contact your vendor",
    50="a composition of conditions reached with an unexpected input vector, contact your vendor"
NODE TYPE=FILE NAME="LBFL_MNG.C"@@COMMENT@/******************************************************************************
 **
 **                                   ==============
 **                                   IDENTIFICATION
 **                                   ==============
 **
 **
 **
 **  Filename            : lbfl_mng.c
 **
 **  Author/ Company     : B.Palomino / THALES Avionics
 **
 **  Creation date       : 19/06/2003
 **
 **  Copyright statement : Copyright (C); 2003
 **                        THALES Avionics
 **
 **  Module description  : Service provided to the CSCs of a process during init of the partition 
 **                        or slicing to raise an error. 
 **
 *****************************************************************************/@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Project specific includes
 *****************************************************************************/@/COMMENT@
@COMMENT@/* MACS TYPES */@/COMMENT@
@COMMENT@#include "COD_A653_API_COMMON.h"@/COMMENT@

@COMMENT@/* SA TYPES */@/COMMENT@
@COMMENT@#include "apsw_basic_types_c.h"@/COMMENT@

@COMMENT@/* PLATFORM TYPES */@/COMMENT@

@COMMENT@/* CALLED CSU TYPES */@/COMMENT@
@COMMENT@#include "lbfl_fsc_error_desc_config.h"@/COMMENT@
@COMMENT@#include "lbfl_init.h"@/COMMENT@
@COMMENT@#include "lbfl_fsc_error_ifc.h"@/COMMENT@
@COMMENT@#include "lbfl_component_id_ifc.h"@/COMMENT@

@COMMENT@#include "lbfl_failure_report_ifc.h"@/COMMENT@
@COMMENT@#include "lbfl_errors_mng_ifc.h"@/COMMENT@
@COMMENT@#include "lbfl_partition_error_ifc.h"@/COMMENT@
@COMMENT@#include "lbfl_partition_error_desc_config.h"@/COMMENT@
@COMMENT@#include "lbport_record_LR_historix.h"@/COMMENT@

@COMMENT@/* CALLED CSU PROTOTYPES */@/COMMENT@
@COMMENT@#include "lbfl_write.p"@/COMMENT@
@COMMENT@#include "lbfl_filt.p"@/COMMENT@
@COMMENT@#include "LBSTR_CMP.p"@/COMMENT@
@COMMENT@#include "lbfl_mng_write.p"@/COMMENT@
@COMMENT@#include "lbfl_save_previous_error_arg.p"@/COMMENT@
@COMMENT@#include "lbfl_mng_lbfl_internal_error.p"@/COMMENT@
@COMMENT@#include "lbfl_ctxt_data_to_ctxt_area_copy.p"@/COMMENT@
@COMMENT@#include "lbport_record_LR_historix.p"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Module specific includes
 *****************************************************************************/@/COMMENT@
@COMMENT@#include "lbfl_mng.p"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Local file declarations
 *****************************************************************************/@/COMMENT@

@COMMENT@#define PARTITION_GNERR_TYPE(par_err_id) ( par_err_id & 0x00020000 )@/COMMENT@
@COMMENT@#define PROCESS_GNERR_TYPE(par_err_id) ( par_err_id & 0x00010000 )@/COMMENT@
@COMMENT@/* USED TO TEST SPECIFIC CASE OF APPEARED OR DISAPPEARED ALREADY MANAGED */@/COMMENT@
@COMMENT@#define APP_DISAPP_TYPE(par_err_id) ( par_err_id & 0x00000F000 )@/COMMENT@
@COMMENT@/* DUE TO NEW FIELD RESERVED TO APPEARED OR DISAPPEARED ALREADY MANAGED, 
   REDUCTION OF THE ERROR_ID DEPTH FROM 16 BITS TO 12 BITS */@/COMMENT@
@COMMENT@#define ERROR_NUM(par_err_id)  ( par_err_id & 0x00000FFF )@/COMMENT@

static	T_boolean					lbfl_fsc_index
	(	T_char						*par_puc_fsc_name,
		T_uint32					par_ul_process_id,
		T_uint32					par_ul_fsc_max_number,
		T_uint32					*par_pul_fsc_index,
		T_uint32					*par_pul_process_and_fsc_id );

static	T_boolean					lbfl_fsc_index_limited
	(	T_char							*par_puc_fsc_name,
		T_lbfl_r_cst_fsc_name_config	*par_pr_fsc_name_config,
		T_uint32						par_ul_fsc_max_number,
		T_uint32						*par_pul_fsc_index	);

static	void					lbfl_mng_lbfl_mng_internal_error
		
	(	T_lbfl_e_fsc_err_index	par_ul_error_id,
		T_uint32				par_ul_line,
		T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_mng_fail_write_arg,
		T_lbfl_r_lbfl_write_arg *par_r_lbfl_write_arg,
		T_boolean				par_b_fatal_error_test	);

@COMMENT@/*	Message for RAISE APPLICATION ERROR (Will be printed in the engineering data) */@/COMMENT@
static const T_uint32 stc_ul_error_msg = 0xA380DEAD;

static T_boolean lbfl_manage_ctx_data (T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_write_arg, 
                                       T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_mng_fail_write_arg, 
                                       T_uchar *par_tuc_ctxt_area,
                                       T_boolean par_b_fatal_error_test);


void		@NODE TYPE=FUNCTION NAME="lbfl_mng"@@LINK NAME="lbfl_mng"@lbfl_mng
	(	T_lbfl_r_cst_fsc_error_config	par_r_fsc_errors_config,
		T_uint32						par_ul_fsc_error_id,
		T_uint32						par_ul_fsc_component_id,
		T_uchar							*par_puc_fsc_component_file_name,
		T_uint32						par_ul_fsc_component_line_number,
		T_uint32						par_ul_ctxt_data_1,
		T_uint32						par_ul_ctxt_data_2,
		T_uint32						par_ul_ctxt_data_3,
		T_uchar							*par_puc_ctxt_data_area,
		T_uint32						par_ul_ctxt_data_area_size	)
@BRANCH MARK=TB ID=70 SUM=20@{	
	
	RETURN_CODE_TYPE					loc_e_return_code = NO_ERROR;
	T_lbfl_r_error_confirm				*loc_pr_error_confirm = K_NULL_PTR;
	T_lbfl_pr_fsc_error_config			loc_pr_fsc_error_config;
	T_lbfl_r_lbfl_write_arg				loc_r_lbfl_write_internal_error = {K_LBFL_E_WRITE_BITE, (T_uint32)K_LBFL_E_PARTITION_LEVEL, K_NULL_PTR, K_NULL_PTR, 0UL, 0UL, (T_uint32)K_LBFL_E_FSC_ERR_NONE, K_LBFL_E_LBFL_MNG_CPT_ID, 0UL, 0UL, 0UL, 0UL, K_NULL_PTR, 0UL, {0UL, 0UL, 0UL, 0UL}};
	T_lbfl_e_return_confirm				loc_b_filt = K_LBFL_E_RETURN_NOT_CONFIRM;
	T_uint32							*loc_pul_level_error_detection_nb;
	T_uint32							*loc_pul_fsc_error_detection_nb;
	T_char								*loc_puc_err_fsc_name;
	T_uint32							loc_ul_fsc_max_number;
	T_uint32							loc_ul_fsc_id;
	T_uint32							loc_ul_error_max_number;
	T_boolean							loc_b_return_fsc_index;
@COMMENT@/*	T_lbfl_r_lbfl_write_arg				loc_r_lbfl_write_arg = {K_LBFL_E_WRITE_DEBUG_BITE, 0UL, K_NULL_PTR, K_NULL_PTR, 0UL, 0UL, (T_uint32)K_LBFL_E_FSC_ERR_NONE, 0UL, 0UL, 0UL, 0UL, 0UL, {K_LBFL_LR_ADDR, K_LBFL_LR_ADDR, K_LBFL_LR_ADDR, K_LBFL_LR_ADDR, K_LBFL_LR_ADDR}};
*/@/COMMENT@
	T_lbfl_r_lbfl_write_arg				loc_r_lbfl_write_arg = {K_LBFL_E_WRITE_BITE, 0UL, K_NULL_PTR, K_NULL_PTR, 0UL, 0UL, (T_uint32)K_LBFL_E_FSC_ERR_NONE, K_LBFL_E_LBFL_MNG_CPT_ID, 0UL, 0UL, 0UL, 0UL, K_NULL_PTR, 0UL, {K_LBFL_LR_ADDR, K_LBFL_LR_ADDR, K_LBFL_LR_ADDR, K_LBFL_LR_ADDR}};
	T_lbfl_r_lbfl_write_arg				loc_r_lbfl_mng_fail_write_arg = {K_LBFL_E_WRITE_DEBUG_OS, 0UL, K_NULL_PTR, K_NULL_PTR, K_LBFL_E_LBFL_FSC_ID, K_LBFL_E_LBFL_FSC_ID, (T_uint32)K_LBFL_E_FSC_ERR_NONE, K_LBFL_E_LBFL_MNG_CPT_ID, 0UL, 0UL, 0UL, 0UL, K_NULL_PTR, 0UL, {0UL, 0UL, 0UL, 0UL}};
	T_boolean							loc_b_lbfl_mng_fail = K_BOOL_FALSE;
	T_uchar								loc_tuc_ctxt_area[MAX_ENGINEERING_DATA_SIZE];
	T_lbfl_pr_error_mng					loc_pr_error_mng;
	T_uint32							loc_ul_error_nb_already_found;
	T_uint32							loc_ul_error_mng_index;	
    T_boolean							loc_b_found = K_BOOL_FALSE;

	T_uint32							loc_ul_masked_error_id;
	
	@BRANCH MARK=TA ID=0 SUM=10@@JUMP NAME="lbport_record_LR_historix"@lbport_record_LR_historix@/JUMP@ (&loc_r_lbfl_write_arg.tul_LR_historix[0])@/BRANCH@;

    @COMMENT@/*	INITIALIZE THE PROCESS_ID FIELD, PART OF THE WRITE ARG RECORD */@/COMMENT@
	loc_r_lbfl_write_arg.ul_process_id			= *r_lbfl_partition_error_config.pr_process_config->pl_process_id;

    @COMMENT@/*	INITIALIZE THE PROCESS_ID / PR_ERROR_MNG / PR_ERROR_CONFIG FIELDS, PART OF THE WRITE ARG RECORD 
		IN CASE OF INTERNAL ERROR IN LBFL_MNG */@/COMMENT@
	loc_r_lbfl_mng_fail_write_arg.ul_process_id = loc_r_lbfl_write_arg.ul_process_id;
	loc_r_lbfl_mng_fail_write_arg.pr_error_mng = pr_lbfl_error_mng;
	loc_r_lbfl_mng_fail_write_arg.pr_error_config = ((T_lbfl_r_error_config	*) TR_LBFL_FSC_ERR_CONFIG);
	loc_r_lbfl_mng_fail_write_arg.puc_ctxt_data_area = loc_tuc_ctxt_area;
	loc_r_lbfl_mng_fail_write_arg.pr_error_mng->puc_fsc_component_file_name = _ERR_FILE_;
	loc_r_lbfl_mng_fail_write_arg.ul_error_config_table_fsc_id =	(loc_r_lbfl_write_arg.ul_process_id << 5) + K_LBFL_E_LBFL_FSC_ID;
	loc_r_lbfl_mng_fail_write_arg.ul_error_localisation_fsc_id =	(loc_r_lbfl_write_arg.ul_process_id << 5) + K_LBFL_E_LBFL_FSC_ID;

	@COMMENT@/*	CHARACTERIZE THE CSC RAISING THE FAILED ERROR ID IN CASE OF INTERNAL ERROR IN LBFL 
		LIMITED TO THE TWO LAST DIGIT TO BE USED IN CASE OF INTERNAL ERROR OF LBFL 
		THIS FIELD WILL BE UPDATED AFTER THE ANALYSE OF FSC_INDEX */@/COMMENT@
	loc_r_lbfl_write_arg.ul_error_localisation_fsc_id = 
        ((((T_uint32) par_r_fsc_errors_config.tuc_fsc_name[2]) << 8) +
        ((T_uint32) par_r_fsc_errors_config.tuc_fsc_name[3]));
	
	@COMMENT@/*	BY DEFAULT, CHARACTERIZE THE CSC OF THE ERROR CONFIG TABLE, 
		LIMITED TO THE TWO LAST DIGIT TO BE USED IN CASE OF INTERNAL ERROR OF LBFL 
		THIS FIELD WILL BE UPDATED AFTER THE ANALYSE OF FSC_INDEX */@/COMMENT@
	loc_r_lbfl_write_arg.ul_error_config_table_fsc_id = loc_r_lbfl_write_arg.ul_error_localisation_fsc_id;

	@COMMENT@/*	STORE THE ARG of LBFL_WRITE IN LOC_R_LBFL_WRITE_ARG STRUCTURE */@/COMMENT@
	loc_r_lbfl_write_arg.ul_fsc_error_id = par_ul_fsc_error_id;
	loc_r_lbfl_write_arg.ul_fsc_component_id = par_ul_fsc_component_id;
	loc_r_lbfl_write_arg.ul_fsc_component_line_number = par_ul_fsc_component_line_number;
	loc_r_lbfl_write_arg.ul_ctxt_data_1 = par_ul_ctxt_data_1;
	loc_r_lbfl_write_arg.ul_ctxt_data_2 = par_ul_ctxt_data_2;
	loc_r_lbfl_write_arg.ul_ctxt_data_3 = par_ul_ctxt_data_3;

	loc_r_lbfl_write_arg.puc_ctxt_data_area = par_puc_ctxt_data_area;
	loc_r_lbfl_write_arg.ul_ctxt_data_area_size = par_ul_ctxt_data_area_size;

   @COMMENT@/*	IF FAILURE PROCESSING IS INITIALIZED */@/COMMENT@
	@DECISION SUM=20+21 ID=68|69@if ( @POPUP@e_lbfl_failure_init_status == K_LBFL_E_INIT_ENDED@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=0 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=1 SUM=30@False@/BRANCH@@/POPUP@)	   
	@BRANCH MARK=TB ID=68 SUM=20@{		
		@COMMENT@/*	IF LBFL HAS BEEN WELL INITIALISED FOR THE CURRENT PROCESS ID */@/COMMENT@
		@DECISION SUM=20+21 ID=66|67@if	(	@POPUP@(@POPUP@loc_r_lbfl_write_arg.ul_process_id == @ALT@K_LBFL_INIT_PARTITION_PHASE@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=2 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=3 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) ||
				((@POPUP@tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].ul_process_id	==	loc_r_lbfl_write_arg.ul_process_id@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=4 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=5 SUM=30@False@/BRANCH@@/POPUP@	) &&
				(@POPUP@loc_r_lbfl_write_arg.ul_process_id	<=	@ALT@K_LBFL_MAX_PROCESS_NB@-ALT@5@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=6 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=7 SUM=30@False@/BRANCH@@/POPUP@@/ALT@		))@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=8&10|8&11 SUM=31@loc_r_lbfl_write_arg.ul_process_id == 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=8 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=10 SUM=32@FTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=8 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=11 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=9&11 SUM=31@tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id] ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=9 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=11 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=9&10 SUM=31@loc_r_lbfl_write_arg.ul_process_id <= 5@/BRANCH@ needs
      @BRANCH MARK=TE ID=9 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=10 SUM=32@FTF@/BRANCH@=F@/POPUP@		)
		@BRANCH MARK=TB ID=66 SUM=20@{			
				@COMMENT@/*	CALL NORMAL TREATMENT OF THE FAILURE */@/COMMENT@

				@COMMENT@/* TEST IF IT IS A GENERAL PARTITION ERROR */@/COMMENT@
				loc_ul_masked_error_id = PARTITION_GNERR_TYPE (par_ul_fsc_error_id);
				@DECISION SUM=20+21 ID=2|9@if (@POPUP@loc_ul_masked_error_id@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=12 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=13 SUM=30@False@/BRANCH@@/POPUP@)
				@BRANCH MARK=TB ID=2 SUM=20@{
					loc_r_lbfl_write_arg.ul_error_config_table_fsc_id = K_LBFL_E_LBFL_FSC_ID;

					@COMMENT@/* TEST IF ERROR_ID IS IN THE RANGE */@/COMMENT@
					loc_ul_masked_error_id = ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
					@DECISION SUM=20+21 ID=0|1@if (@POPUP@loc_ul_masked_error_id < @ALT@K_LBFL_PARTITION_GNERR_NB@-ALT@(K_LBFL_E_NB_GNERR_PLUS_K_LBFL_GNERR_OFFSET - 0x20000)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=14 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=15 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
					@BRANCH MARK=TB ID=0 SUM=20@{
						@COMMENT@/* NOTHING TO DO */@/COMMENT@
						;
					}@/BRANCH@
					@BRANCH MARK=TB ID=1 SUM=20@else 
					{
@COMMENT@/*						MANAGE FATAL LBFL_MNG INTERNAL ERROR*/@/COMMENT@
						loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 = ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
						@BRANCH MARK=TA ID=1 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
							(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
					}@/BRANCH@@/DECISION@ 
					@COMMENT@/* ENDIF */@/COMMENT@

@COMMENT@/*					POINT TO THE GENERAL PARTITION ERROR TABLES AND INITIALISE LOCAL VARIABLES WITH IT */@/COMMENT@
					loc_r_lbfl_write_arg.pr_error_mng = tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].pr_error_mng;
					loc_ul_error_max_number =			tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].ul_error_number;
					loc_ul_fsc_max_number =				tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].ul_component_number;
					tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].b_current_cycle_error_detection = K_BOOL_TRUE;
					loc_pr_fsc_error_config =			&R_LBFL_PARTITION_GNERR_CONFIG;
					loc_pul_level_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].ul_level_error_detection_nb;
					loc_pul_fsc_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PARTITION_LEVEL].tul_fsc_error_detection_nb[0];
				}@/BRANCH@
				@BRANCH MARK=TB ID=9 SUM=20@else 
				{
@COMMENT@/*					TEST IF	IT IS A GENERAL PROCESS ERROR */@/COMMENT@
					loc_ul_masked_error_id = PROCESS_GNERR_TYPE (par_ul_fsc_error_id);
					@DECISION SUM=20+21 ID=5|8@if (@POPUP@loc_ul_masked_error_id@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=16 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=17 SUM=30@False@/BRANCH@@/POPUP@)
					@BRANCH MARK=TB ID=5 SUM=20@{
						loc_r_lbfl_write_arg.ul_error_config_table_fsc_id = K_LBFL_E_LBFL_FSC_ID;

@COMMENT@/*						POINT TO THE GENERAL PROCESS ERROR TABLES AND INITIALISE LOCAL VARIABLES WITH IT */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng = tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].pr_error_mng;
						loc_ul_error_max_number =			tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].ul_error_number;
						loc_ul_fsc_max_number =				tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].ul_component_number;
						tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].b_current_cycle_error_detection = K_BOOL_TRUE;
						loc_pr_fsc_error_config =			tr_process_error_config[loc_r_lbfl_write_arg.ul_process_id].pr_process_gnerr_config;
						loc_pul_level_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].ul_level_error_detection_nb;
						loc_pul_fsc_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_PROCESS_LEVEL].tul_fsc_error_detection_nb[0];
						
@COMMENT@/*						TEST THE FAILED INITIALISATION OF POINTER */@/COMMENT@
						@DECISION SUM=20+21 ID=3|4@if (@POPUP@loc_pr_fsc_error_config == @ALT@K_NULL_PTR@-ALT@((T_ptr)0)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=18 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=19 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
						@BRANCH MARK=TB ID=3 SUM=20@{
@COMMENT@/*							MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
							@BRANCH MARK=TA ID=2 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
								(K_LBFL_E_FSC_ERR_PTR_NULL, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
						}@/BRANCH@
						@BRANCH MARK=TB ID=4 SUM=20@else
						{
						@COMMENT@/* NOTHING TO DO */@/COMMENT@
							;
						}@/BRANCH@@/DECISION@ 
						@COMMENT@/*$ ENDIF */@/COMMENT@
					}@/BRANCH@
					@COMMENT@/* IT IS A SPECIFIC FSC ERROR */@/COMMENT@
					@BRANCH MARK=TB ID=8 SUM=20@else 
					{
@COMMENT@/*						POINT TO THE SPECIFIC FSC ERROR TABLES AND INITIALISE LOCAL VARIABLES WITH IT */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng = tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].pr_error_mng;			
						loc_ul_error_max_number =			tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].ul_error_number;
						loc_ul_fsc_max_number =				tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].ul_component_number;
						tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].b_current_cycle_error_detection = K_BOOL_TRUE;
						loc_pr_fsc_error_config =			&par_r_fsc_errors_config;
						loc_pul_level_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].ul_level_error_detection_nb;
						loc_pul_fsc_error_detection_nb =	&tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].tul_fsc_error_detection_nb[0];

						@COMMENT@/* TEST IF ERROR_ID IS OUT OF THE RANGE */@/COMMENT@
						loc_ul_masked_error_id = ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
						@DECISION SUM=20+21 ID=6|7@if (@POPUP@loc_ul_masked_error_id > loc_pr_fsc_error_config->ul_nb_errors@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=20 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=21 SUM=30@False@/BRANCH@@/POPUP@)
						@BRANCH MARK=TB ID=6 SUM=20@{
@COMMENT@/*							MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
							loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 = ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
							@BRANCH MARK=TA ID=3 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
								(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
						}@/BRANCH@
						@BRANCH MARK=TB ID=7 SUM=20@else
						{
							@COMMENT@/* NOTHING TO DO */@/COMMENT@
							;
						}@/BRANCH@@/DECISION@ 
						@COMMENT@/* ENDIF */@/COMMENT@
					}@/BRANCH@@/DECISION@
					@COMMENT@/* ENDIF */@/COMMENT@
				}@/BRANCH@@/DECISION@
				@COMMENT@/* ENDIF */@/COMMENT@

			    @COMMENT@/* INITIALIZE THE FIELD : POINTER TO THE ERROR CONFIG, PART OF THE WRITE ARG RECORD */@/COMMENT@
				loc_r_lbfl_write_arg.pr_error_config = (T_lbfl_r_error_config *) &loc_pr_fsc_error_config->pr_error_config[(ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id))];

@COMMENT@/*				TEST A FAILED INITIALISATION OF POINTER */@/COMMENT@						
				@DECISION SUM=20+21 ID=10|11@if (@POPUP@loc_r_lbfl_write_arg.pr_error_config  == @ALT@K_NULL_PTR@-ALT@((T_ptr)0)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=22 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=23 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
				@BRANCH MARK=TB ID=10 SUM=20@{
@COMMENT@/*					MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
@COMMENT@/*					CHARACTERIZE THE FSC ERROR CONFIG ADDRESS */@/COMMENT@
					@BRANCH MARK=TA ID=4 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
						(K_LBFL_E_FSC_ERR_PTR_NULL, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
					loc_b_lbfl_mng_fail = K_BOOL_TRUE;
				}@/BRANCH@
				@BRANCH MARK=TB ID=11 SUM=20@else
				{
					@COMMENT@/* NOTHING TO DO */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@ 
				@COMMENT@/* ENDIF */@/COMMENT@

            @COMMENT@/* MANAGE CTX AREA */@/COMMENT@
            @BRANCH MARK=TA ID=5 SUM=10@@JUMP NAME="lbfl_manage_ctx_data"@lbfl_manage_ctx_data@/JUMP@ (&loc_r_lbfl_write_arg, &loc_r_lbfl_mng_fail_write_arg, &loc_tuc_ctxt_area[0], K_BOOL_TRUE)@/BRANCH@;
		
			@COMMENT@/* STORE THE CTXT DATA IN CTXT AREA of LOC_R_LBFL_WRITE_ARG STRUCTURE */@/COMMENT@ 
			@COMMENT@/* THOSE CTXT DATA SHALL NOT BE USED AS KEYWORD BY EBR, */@/COMMENT@
			@COMMENT@/* TO NOT LOSE THEM, THEY ARE COPIED IN CTXT DATA AREA*/@/COMMENT@
			@BRANCH MARK=TA ID=6 SUM=10@@JUMP NAME="lbfl_ctxt_data_to_ctxt_area_copy"@lbfl_ctxt_data_to_ctxt_area_copy@/JUMP@ (&loc_r_lbfl_write_arg)@/BRANCH@;
				
@COMMENT@/*				POINT TO THE FSC NAME WHERE THE CONFIGURATION TABLE IS LOCALISED */@/COMMENT@
				loc_puc_err_fsc_name = (T_char *) loc_pr_fsc_error_config->tuc_fsc_name;

@COMMENT@/*				DETERMINE THE FSC ID CORRESPONDING TO THIS FSC NAME */@/COMMENT@
			loc_b_return_fsc_index = @BRANCH MARK=TA ID=7 SUM=10@@JUMP NAME="lbfl_fsc_index"@lbfl_fsc_index@/JUMP@ (loc_puc_err_fsc_name, 
															loc_r_lbfl_write_arg.ul_process_id,
															loc_ul_fsc_max_number, 
															&loc_ul_fsc_id, 
															&loc_r_lbfl_write_arg.ul_error_config_table_fsc_id)@/BRANCH@;

@COMMENT@/*				THE FSC NAME IS NOT DEFINED IN THE FSC NAME CONFIG TABLE */@/COMMENT@
				@DECISION SUM=20+21 ID=12|13@if (@POPUP@loc_b_return_fsc_index == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=24 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=25 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) 
				@BRANCH MARK=TB ID=12 SUM=20@{
@COMMENT@/*					MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
					@COMMENT@/*	THE TWO LAST DIGIT OF FSC RAISING THE ERROR ARE IN FSC ID OF PREVIOUS ERROR */@/COMMENT@
					loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 =	loc_r_lbfl_write_arg.ul_error_localisation_fsc_id; 
					@BRANCH MARK=TA ID=8 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
						(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_TRUE)@/BRANCH@;
					loc_b_lbfl_mng_fail = K_BOOL_TRUE;
				}@/BRANCH@
				@BRANCH MARK=TB ID=13 SUM=20@else 
				{
				@COMMENT@/* NOTHING TO DO */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@
				@COMMENT@/*$ ENDIF */@/COMMENT@


@COMMENT@/*				TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET  */@/COMMENT@
				@DECISION SUM=20+21 ID=16|17@if (@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=26 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=27 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
				@BRANCH MARK=TB ID=16 SUM=20@{
@COMMENT@/*					DETERMINE THE FSC ID WHERE THE ERROR IS LOCALISED */@/COMMENT@
					loc_b_return_fsc_index = @BRANCH MARK=TA ID=9 SUM=10@@JUMP NAME="lbfl_fsc_index"@lbfl_fsc_index@/JUMP@ (	(T_char *) par_r_fsc_errors_config.tuc_fsc_name, 
																loc_r_lbfl_write_arg.ul_process_id, 
																loc_ul_fsc_max_number, 
																&loc_ul_fsc_id, 
																&loc_r_lbfl_write_arg.ul_error_localisation_fsc_id)@/BRANCH@;
@COMMENT@/*					TEST IF THE FSC ID DETERMINATION IS FAILED  */@/COMMENT@
					@DECISION SUM=20+21 ID=14|15@if (@POPUP@loc_b_return_fsc_index == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=28 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=29 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) 
					@BRANCH MARK=TB ID=14 SUM=20@{
@COMMENT@/*						MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
						loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 =	loc_r_lbfl_write_arg.ul_error_localisation_fsc_id; 
						@BRANCH MARK=TA ID=10 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
							(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_TRUE)@/BRANCH@;
						loc_b_lbfl_mng_fail = K_BOOL_TRUE;
					}@/BRANCH@
					@BRANCH MARK=TB ID=15 SUM=20@else 
					{
						@COMMENT@/* NOTHING TO DO */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@
					@COMMENT@/* ENDIF */@/COMMENT@	
				}@/BRANCH@
				@BRANCH MARK=TB ID=17 SUM=20@else
				{
				@COMMENT@/* NOTHING TO DO */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@
				@COMMENT@/* ENDIF */@/COMMENT@

			@COMMENT@/* IF THE ERROR WAS RAISED DURING OPER PHASE AND IT IS NOT AN ALREADY APP_DISAPP MNG ERROR */@/COMMENT@
			loc_ul_masked_error_id = APP_DISAPP_TYPE (par_ul_fsc_error_id);
			@DECISION SUM=20+21 ID=59|65@if (	@POPUP@(	@POPUP@loc_r_lbfl_write_arg.ul_process_id	!= @ALT@K_LBFL_INIT_PARTITION_PHASE@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=30 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=31 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ )	&&
					(	@POPUP@loc_ul_masked_error_id				!= @ALT@K_LBFL_E_FLEET_ALREADY_MNG@-ALT@0xE000@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=32 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=33 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ )		&&
					(	@POPUP@loc_ul_masked_error_id				!= @ALT@K_LBFL_E_APP_ALREADY_MNG@-ALT@0xF000@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=34 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=35 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ )		&&
					(	@POPUP@loc_ul_masked_error_id				!= @ALT@K_LBFL_E_DISAPP_ALREADY_MNG@-ALT@0x7000@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=36 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=37 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ )@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=38&42 SUM=31@loc_r_lbfl_write_arg.ul_process_id != 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=38 SUM=32@TTTT@/BRANCH@=T,@BRANCH MARK=TE ID=42 SUM=32@FXXX@/BRANCH@=F
  @BRANCH MARK=TE ID=38&41 SUM=31@loc_ul_masked_error_id != 0xE000@/BRANCH@ needs
      @BRANCH MARK=TE ID=38 SUM=32@TTTT@/BRANCH@=T,@BRANCH MARK=TE ID=41 SUM=32@TFXX@/BRANCH@=F
  @BRANCH MARK=TE ID=38&40 SUM=31@loc_ul_masked_error_id != 0xF000@/BRANCH@ needs
      @BRANCH MARK=TE ID=38 SUM=32@TTTT@/BRANCH@=T,@BRANCH MARK=TE ID=40 SUM=32@TTFX@/BRANCH@=F
  @BRANCH MARK=TE ID=38&39 SUM=31@loc_ul_masked_error_id != 0x7000@/BRANCH@ needs
      @BRANCH MARK=TE ID=38 SUM=32@TTTT@/BRANCH@=T,@BRANCH MARK=TE ID=39 SUM=32@TTTF@/BRANCH@=F@/POPUP@		)
			@BRANCH MARK=TB ID=59 SUM=20@{
				@COMMENT@/*	TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET */@/COMMENT@
				@DECISION SUM=20+21 ID=20|21@if	(@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=43 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=44 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
				@BRANCH MARK=TB ID=20 SUM=20@{
					@COMMENT@/* TEST IF THE ERROR MNG TABLE POINTER INITIALISATION IS FAILED */@/COMMENT@
						@DECISION SUM=20+21 ID=18|19@if (@POPUP@loc_r_lbfl_write_arg.pr_error_mng	== @ALT@K_NULL_PTR@-ALT@((T_ptr)0)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=45 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=46 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)					
						@BRANCH MARK=TB ID=18 SUM=20@{
						@COMMENT@/* MANAGE LBFL_MNG INTERNAL ERROR */@/COMMENT@
							@BRANCH MARK=TA ID=11 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
								(K_LBFL_E_FSC_ERR_PTR_NULL, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_TRUE)@/BRANCH@;
							loc_b_lbfl_mng_fail = K_BOOL_TRUE;
						}@/BRANCH@
						@BRANCH MARK=TB ID=19 SUM=20@else
						{
							@COMMENT@/* NOTHING TO DO */@/COMMENT@
							;
						}@/BRANCH@@/DECISION@ 
						@COMMENT@/* ENDIF */@/COMMENT@
					}@/BRANCH@
					@BRANCH MARK=TB ID=21 SUM=20@else 
					{
						@COMMENT@/*$ NOTHING TO DO */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@
					@COMMENT@/*$ ENDIF */@/COMMENT@

					@COMMENT@/*	TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET  */@/COMMENT@
					@DECISION SUM=20+21 ID=44|45@if (@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=47 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=48 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
					@BRANCH MARK=TB ID=44 SUM=20@{
@COMMENT@/*						POINT TO THE BEGINNING OF THE FSC CONFIRMATION MANAGEMENT ARRAY RESERVED TO THIS FSC */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng = loc_r_lbfl_write_arg.pr_error_mng + (loc_ul_error_max_number * loc_ul_fsc_id);
						loc_pr_error_mng = loc_r_lbfl_write_arg.pr_error_mng;

@COMMENT@/*						POINT TO THE NB OF ERROR ALREADY IN MANAGEMENT IN THIS FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
						loc_pul_fsc_error_detection_nb = loc_pul_fsc_error_detection_nb + loc_ul_fsc_id;

						loc_ul_error_nb_already_found = 0;
						loc_ul_error_mng_index = 0;

						@COMMENT@/* check if there is at least one error in confirmation management in 
						/* this FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
						@DECISION SUM=20+21 ID=31|32@if (@POPUP@*loc_pul_fsc_error_detection_nb != 0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=49 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=50 SUM=30@False@/BRANCH@@/POPUP@)
						@BRANCH MARK=TB ID=31 SUM=20@{
@COMMENT@/*							Find this error in FSC CONFIRMATION MANAGEMENT ARRAY until
							the end of FSC CONFIRMATION MANAGEMENT ARRAY is reached		
							/* To reduce scanning time : 
							/* stop the scan of the FSC CONFIRMATION MANAGEMENT ARRAY 
							/* as soon as the number of errors already found, by this scan, 
							/* reachs the total number of errors in confirmation management for this FSC */@/COMMENT@
							@POPUP@do@-POPUP@loop branches :
@BRANCH MARK=TB ID=29 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=30 SUM=22@  2 loops or more@/BRANCH@@/POPUP@
							@BRANCH MARK=TB ID=28 SUM=20@{
                            @COMMENT@/*POINT TO AN ERROR MNG CONFIRMATION STRUCT OF THE FSC ERROR MANAGEMENT ARRAY */@/COMMENT@
								loc_pr_error_confirm = &loc_pr_error_mng->r_error_confirm;

								@COMMENT@/* check if this present error mng struct in FSC CONFIRMATION MANAGEMENT ARRAY 
								/* is already used for the management of an error */@/COMMENT@
								@DECISION SUM=20+21 ID=26|27@if (	@POPUP@(@POPUP@loc_pr_error_confirm->b_current_cycle_detection	== @ALT@K_BOOL_TRUE@-ALT@1UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=51 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=52 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) ||
										(@POPUP@loc_pr_error_confirm->ul_occ_index					!= 0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=53 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=54 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=55&57 SUM=31@loc_pr_error_confirm->b_current_cycle_detection == 1UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=55 SUM=32@TX@/BRANCH@=T,@BRANCH MARK=TE ID=57 SUM=32@FF@/BRANCH@=F
  @BRANCH MARK=TE ID=56&57 SUM=31@loc_pr_error_confirm->ul_occ_index != 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=56 SUM=32@FT@/BRANCH@=T,@BRANCH MARK=TE ID=57 SUM=32@FF@/BRANCH@=F@/POPUP@				)
								@BRANCH MARK=TB ID=26 SUM=20@{
									@COMMENT@/* update the current counter of errors number present in the part of scan of FSC CONFIRMATION MANAGEMENT ARRAY
									/* already performed */@/COMMENT@
									loc_ul_error_nb_already_found++;

									@COMMENT@/* check if this present error in FSC CONFIRMATION MANAGEMENT ARRAY 
									/* corresponds to the current error */@/COMMENT@
									loc_ul_masked_error_id = ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
									@DECISION SUM=20+21 ID=24|25@if (	@POPUP@(@POPUP@loc_pr_error_confirm->e_current_error_desc.ul_error_id	== loc_ul_masked_error_id@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=58 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=59 SUM=30@False@/BRANCH@@/POPUP@)	&&
											(@POPUP@loc_pr_error_confirm->e_current_error_desc.ul_csu_id	== loc_r_lbfl_write_arg.ul_fsc_component_id@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=60 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=61 SUM=30@False@/BRANCH@@/POPUP@			)	&&
											(@POPUP@loc_pr_error_confirm->e_current_error_desc.ul_category	== loc_r_lbfl_write_arg.pr_error_config->ul_category@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=62 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=63 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=64&67 SUM=31@loc_pr_error_confirm->e_current_error_desc.ul_error_id ==  ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=64 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=67 SUM=32@FXX@/BRANCH@=F
  @BRANCH MARK=TE ID=64&66 SUM=31@loc_pr_error_confirm->e_current_error_desc.ul_csu_id ==  ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=64 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=66 SUM=32@TFX@/BRANCH@=F
  @BRANCH MARK=TE ID=64&65 SUM=31@loc_pr_error_confirm->e_current_error_desc.ul_category ==  ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=64 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=65 SUM=32@TTF@/BRANCH@=F@/POPUP@		)
									@BRANCH MARK=TB ID=24 SUM=20@{
										@COMMENT@/* For LBIOPR and LBGALA, The CTXT1 has been loaded instead the line */@/COMMENT@
										@COMMENT@/* the line has no sense for this case, the CTXT1 is usefull to distinguish error in same file */@/COMMENT@ 
										loc_ul_masked_error_id = loc_r_lbfl_write_arg.ul_error_localisation_fsc_id & 0x00001F;
										@DECISION SUM=20+21 ID=22|23@if (	@POPUP@(	(	(	(@POPUP@loc_ul_masked_error_id != @ALT@K_LBFL_E_GALA_FSC@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=68 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=69 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) &&
															(@POPUP@loc_ul_masked_error_id != @ALT@K_LBFL_E_IOPR_FSC@-ALT@1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=70 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=71 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)	)	&&
														(@POPUP@loc_pr_error_confirm->e_current_error_desc.ul_line == loc_r_lbfl_write_arg.ul_fsc_component_line_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=72 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=73 SUM=30@False@/BRANCH@@/POPUP@)	)	) ||
												(	(	(	(@POPUP@loc_ul_masked_error_id == @ALT@K_LBFL_E_GALA_FSC@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=74 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=75 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) ||
															(@POPUP@loc_ul_masked_error_id == @ALT@K_LBFL_E_IOPR_FSC@-ALT@1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=76 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=77 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)	)	&&
														(@POPUP@loc_pr_error_confirm->e_current_error_desc.ul_line == loc_r_lbfl_write_arg.ul_ctxt_data_1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=78 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=79 SUM=30@False@/BRANCH@@/POPUP@)	)	)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=80&93|80&94|80&95 SUM=31@loc_ul_masked_error_id != 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=93 SUM=32@FXXTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=94 SUM=32@FXXFTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=95 SUM=32@FXXFFX@/BRANCH@=F
  @BRANCH MARK=TE ID=80&90|80&91|80&92 SUM=31@loc_ul_masked_error_id != 1@/BRANCH@ needs
      @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=90 SUM=32@TFXTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=91 SUM=32@TFXFTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=92 SUM=32@TFXFFX@/BRANCH@=F
  @BRANCH MARK=TE ID=80&87|80&88|80&89 SUM=31@loc_pr_error_confirm->e_current_error_desc.ul_line ==  ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=87 SUM=32@TTFTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=88 SUM=32@TTFFTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=80 SUM=32@TTTXXX@/BRANCH@=T,@BRANCH MARK=TE ID=89 SUM=32@TTFFFX@/BRANCH@=F
  @BRANCH MARK=TE ID=81&89|83&92|85&95 SUM=31@loc_ul_masked_error_id == 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=81 SUM=32@TTFTXT@/BRANCH@=T,@BRANCH MARK=TE ID=89 SUM=32@TTFFFX@/BRANCH@=F
   or @BRANCH MARK=TE ID=83 SUM=32@TFXTXT@/BRANCH@=T,@BRANCH MARK=TE ID=92 SUM=32@TFXFFX@/BRANCH@=F
   or @BRANCH MARK=TE ID=85 SUM=32@FXXTXT@/BRANCH@=T,@BRANCH MARK=TE ID=95 SUM=32@FXXFFX@/BRANCH@=F
  @BRANCH MARK=TE ID=82&89|84&92|86&95 SUM=31@loc_ul_masked_error_id == 1@/BRANCH@ needs
      @BRANCH MARK=TE ID=82 SUM=32@TTFFTT@/BRANCH@=T,@BRANCH MARK=TE ID=89 SUM=32@TTFFFX@/BRANCH@=F
   or @BRANCH MARK=TE ID=84 SUM=32@TFXFTT@/BRANCH@=T,@BRANCH MARK=TE ID=92 SUM=32@TFXFFX@/BRANCH@=F
   or @BRANCH MARK=TE ID=86 SUM=32@FXXFTT@/BRANCH@=T,@BRANCH MARK=TE ID=95 SUM=32@FXXFFX@/BRANCH@=F
  @BRANCH MARK=TE ID=81&87|82&88|83&90|84&91|85&93|86&94 SUM=31@loc_pr_error_confirm->e_current_error_desc.ul_line ==  ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=81 SUM=32@TTFTXT@/BRANCH@=T,@BRANCH MARK=TE ID=87 SUM=32@TTFTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=82 SUM=32@TTFFTT@/BRANCH@=T,@BRANCH MARK=TE ID=88 SUM=32@TTFFTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=83 SUM=32@TFXTXT@/BRANCH@=T,@BRANCH MARK=TE ID=90 SUM=32@TFXTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=84 SUM=32@TFXFTT@/BRANCH@=T,@BRANCH MARK=TE ID=91 SUM=32@TFXFTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=85 SUM=32@FXXTXT@/BRANCH@=T,@BRANCH MARK=TE ID=93 SUM=32@FXXTXF@/BRANCH@=F
   or @BRANCH MARK=TE ID=86 SUM=32@FXXFTT@/BRANCH@=T,@BRANCH MARK=TE ID=94 SUM=32@FXXFTF@/BRANCH@=F@/POPUP@	)

										@BRANCH MARK=TB ID=22 SUM=20@{
											@COMMENT@/* set the detection flag to TRUE TO INDICATE THE PRESENCE OF THIS ERROR DURING THIS CYCLE,
											/* THIS FLAG IS USED BY LBFL_MAIN */@/COMMENT@
											loc_pr_error_confirm->b_current_cycle_detection = K_BOOL_TRUE;
											@COMMENT@/* set the loop detection flag to TRUE TO GO OUT THE WHILE LOOP  */@/COMMENT@
											loc_b_found	= K_BOOL_TRUE;
										}@/BRANCH@
										@BRANCH MARK=TB ID=23 SUM=20@else
										{
											@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
											;
										}@/BRANCH@@/DECISION@
									}@/BRANCH@
									@BRANCH MARK=TB ID=25 SUM=20@else
									{
										@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
										;
									}@/BRANCH@@/DECISION@
								}@/BRANCH@
								@BRANCH MARK=TB ID=27 SUM=20@else
								{
									@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
									;
								}@/BRANCH@@/DECISION@
				@COMMENT@/*				INCREMENT THE INDEX IN ORDER TO POINT TO THE NEXT ERROR MNG STRUCT IN THE FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
								loc_ul_error_mng_index++;
								loc_pr_error_mng ++;

							@COMMENT@/*$ ENDO WHILE */@/COMMENT@
							}@/BRANCH@ while (	@POPUP@(@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=96 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=97 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)									&& 
										(@POPUP@loc_ul_error_mng_index < loc_ul_error_max_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=98 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=99 SUM=30@False@/BRANCH@@/POPUP@)				&& 
										(@POPUP@loc_ul_error_nb_already_found < *loc_pul_fsc_error_detection_nb@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=100 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=101 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=102&105 SUM=31@loc_b_found == 0UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=102 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=105 SUM=32@FXX@/BRANCH@=F
  @BRANCH MARK=TE ID=102&104 SUM=31@loc_ul_error_mng_index < loc_ul_error_max_number@/BRANCH@ needs
      @BRANCH MARK=TE ID=102 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=104 SUM=32@TFX@/BRANCH@=F
  @BRANCH MARK=TE ID=102&103 SUM=31@loc_ul_error_nb_already_found < *loc_pul_fsc_error_detection_nb@/BRANCH@ needs
      @BRANCH MARK=TE ID=102 SUM=32@TTT@/BRANCH@=T,@BRANCH MARK=TE ID=103 SUM=32@TTF@/BRANCH@=F@/POPUP@	);

						}@/BRANCH@
						@BRANCH MARK=TB ID=32 SUM=20@else
						{
							@COMMENT@/* Nothing to do*/@/COMMENT@
							;
						}@/BRANCH@@/DECISION@

@COMMENT@/*						if the current error has not be found by the preceeding scan
						of the FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
						@DECISION SUM=20+21 ID=42|43@if (@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=106 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=107 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
						@BRANCH MARK=TB ID=42 SUM=20@{
							loc_ul_error_mng_index = 0;
							@COMMENT@/* AT FSC LEVEL; THE NUMBER OF PRESENT ERRORS IN THE FSC CONFIRMATION MANAGEMENT ARRAY IS INCREMENTED BY ONE */@/COMMENT@
							(*loc_pul_fsc_error_detection_nb) ++;
							@COMMENT@/* AT "LEVEL" LEVEL; THE NUMBER OF PRESENT ERRORS AT THIS LEVEL IS INCREMENTED BY ONE  */@/COMMENT@
							(*loc_pul_level_error_detection_nb) ++;

							loc_pr_error_mng = loc_r_lbfl_write_arg.pr_error_mng;

@COMMENT@/*							insert this error in the FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
							@POPUP@do@-POPUP@loop branches :
@BRANCH MARK=TB ID=38 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=39 SUM=22@  2 loops or more@/BRANCH@@/POPUP@
							@BRANCH MARK=TB ID=37 SUM=20@{
								@COMMENT@/*POINT TO THE ERROR MNG CONFIRMATION STRUCT */@/COMMENT@
								loc_pr_error_confirm = &loc_pr_error_mng->r_error_confirm;
								@COMMENT@/* if this ERROR MNG CONFIRMATION STRUCT is free to store the current error */@/COMMENT@
								@DECISION SUM=20+21 ID=35|36@if (	@POPUP@(@POPUP@loc_pr_error_confirm->b_current_cycle_detection	== @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=108 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=109 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) &&
										(@POPUP@loc_pr_error_confirm->ul_occ_index					== 0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=110 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=111 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=112&114 SUM=31@loc_pr_error_confirm->b_current_cycle_detection == 0UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=112 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=114 SUM=32@FX@/BRANCH@=F
  @BRANCH MARK=TE ID=112&113 SUM=31@loc_pr_error_confirm->ul_occ_index == 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=112 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=113 SUM=32@TF@/BRANCH@=F@/POPUP@				)
								@BRANCH MARK=TB ID=35 SUM=20@{
									@COMMENT@/*	SET THE DETECTION FLAG TO INDICATE THE PRESENCE DURING THIS CYCLE OF THIS NEW ERROR 
									/*  IN THE FSC CONFIRMATION MANAGEMENT ARRAY, THIS FLAG IS USED BY LBFL_MAIN */@/COMMENT@
									loc_pr_error_confirm->b_current_cycle_detection = K_BOOL_TRUE;
									loc_b_found			= K_BOOL_TRUE;

									@COMMENT@/*	STORE THE CHARACTERISTICS OF THIS NEW ERROR */@/COMMENT@
									loc_pr_error_confirm->e_current_error_desc.ul_error_id	= ERROR_NUM(loc_r_lbfl_write_arg.ul_fsc_error_id);
									loc_pr_error_confirm->e_current_error_desc.ul_csu_id	= loc_r_lbfl_write_arg.ul_fsc_component_id	;
									loc_pr_error_confirm->e_current_error_desc.ul_category	= loc_r_lbfl_write_arg.pr_error_config->ul_category;									
									
									@COMMENT@/* For LBIOPR and LBGALA, The CTXT1 has been loaded instead the line */@/COMMENT@
									@COMMENT@/* because the line has no sens, the CTXT1 is useful to distinguish error in same file */@/COMMENT@
									loc_ul_masked_error_id = loc_r_lbfl_write_arg.ul_error_localisation_fsc_id & 0x00001F;
									@DECISION SUM=20+21 ID=33|34@if (	@POPUP@(@POPUP@loc_ul_masked_error_id == @ALT@K_LBFL_E_GALA_FSC@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=115 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=116 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) ||
											(@POPUP@loc_ul_masked_error_id == @ALT@K_LBFL_E_IOPR_FSC@-ALT@1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=117 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=118 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=119&121 SUM=31@loc_ul_masked_error_id == 0@/BRANCH@ needs
      @BRANCH MARK=TE ID=119 SUM=32@TX@/BRANCH@=T,@BRANCH MARK=TE ID=121 SUM=32@FF@/BRANCH@=F
  @BRANCH MARK=TE ID=120&121 SUM=31@loc_ul_masked_error_id == 1@/BRANCH@ needs
      @BRANCH MARK=TE ID=120 SUM=32@FT@/BRANCH@=T,@BRANCH MARK=TE ID=121 SUM=32@FF@/BRANCH@=F@/POPUP@	)
									@BRANCH MARK=TB ID=33 SUM=20@{
										loc_pr_error_confirm->e_current_error_desc.ul_line		= loc_r_lbfl_write_arg.ul_ctxt_data_1;
									}@/BRANCH@
									@BRANCH MARK=TB ID=34 SUM=20@else
									{
										loc_pr_error_confirm->e_current_error_desc.ul_line		= loc_r_lbfl_write_arg.ul_fsc_component_line_number;
									}@/BRANCH@@/DECISION@
								}@/BRANCH@
								@BRANCH MARK=TB ID=36 SUM=20@else
								{
									@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
									;
								}@/BRANCH@@/DECISION@
				@COMMENT@/*				INCREMENT THE INDEX IN ORDER TO POINT TO THE NEXT ERROR MNG STRUCT 
				/*				IN THE FSC CONFIRMATION MANAGEMENT ARRAY */@/COMMENT@
								loc_ul_error_mng_index++;
								loc_pr_error_mng ++;

							}@/BRANCH@ while (@POPUP@(@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=122 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=123 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) && (@POPUP@loc_ul_error_mng_index < loc_ul_error_max_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=124 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=125 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=126&128 SUM=31@loc_b_found == 0UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=126 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=128 SUM=32@FX@/BRANCH@=F
  @BRANCH MARK=TE ID=126&127 SUM=31@loc_ul_error_mng_index < loc_ul_error_max_number@/BRANCH@ needs
      @BRANCH MARK=TE ID=126 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=127 SUM=32@TF@/BRANCH@=F@/POPUP@);

							@COMMENT@/*	If the FSC CONFIRMATION MANAGEMENT ARRAY is full, raise an internal error */@/COMMENT@
							@DECISION SUM=20+21 ID=40|41@if (@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=129 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=130 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
							@BRANCH MARK=TB ID=40 SUM=20@{
							@COMMENT@/*	MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
								@BRANCH MARK=TA ID=12 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
								(K_LBFL_E_FSC_ERR_CTXT_SIZE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_TRUE)@/BRANCH@;
								loc_b_lbfl_mng_fail = K_BOOL_TRUE;
							}@/BRANCH@
							@BRANCH MARK=TB ID=41 SUM=20@else
							{
								@COMMENT@/* Nothing to do */@/COMMENT@
								;
							}@/BRANCH@@/DECISION@
						}@/BRANCH@
						@BRANCH MARK=TB ID=43 SUM=20@else
						{
							@COMMENT@/* Nothing to do */@/COMMENT@
							;
						}@/BRANCH@@/DECISION@
					}@/BRANCH@
					@BRANCH MARK=TB ID=45 SUM=20@else
					{
						@COMMENT@/* Nothing to do */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@

					@COMMENT@/*	TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET  */@/COMMENT@
					@DECISION SUM=20+21 ID=50|51@if (@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=131 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=132 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
					@BRANCH MARK=TB ID=50 SUM=20@{

						@COMMENT@/* POINT TO THE FOUND ERROR_MNG POINTER */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng = --loc_pr_error_mng;

						@COMMENT@/* INITIALIZE THE FIELD : ERROR_LABEL, USED TO DISPLAY IT IN CASE OF DISAPPEARANCE DURING 
							LBFL_MAIN SCAN THROUGH THE USE OF LBFL_WRITE_DEBUG WITH CONSTRAINT TO HAVE IT ALSO FOR AN INTERNAL LBFL ERROR */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng->puc_error_label = (T_char *) &loc_r_lbfl_write_arg.pr_error_config->tuc_error_label[0];			

					
						@COMMENT@/* INITIALIZE THE FIELD : CSU_NAME, USED TO DISPLAY IT IN CASE OF DISAPPEARANCE DURING 
						   LBFL_MAIN SCAN */@/COMMENT@
						loc_r_lbfl_write_arg.pr_error_mng->puc_fsc_component_file_name = par_puc_fsc_component_file_name;

						@COMMENT@/* CASE PROCESS THE ERROR STATE */@/COMMENT@
						@DECISION SUM=20+21 ID=46|47|48|49@switch ( loc_pr_error_confirm->e_error_state )
						{
						@COMMENT@/* IS NOT APPEARED */@/COMMENT@
						@BRANCH MARK=TB ID=46 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=133 SUM=30@case K_LBFL_E_NOT_APPEARED:@/BRANCH@@/BRANCH@

							@COMMENT@/* PASS TO DETECTED STATE */@/COMMENT@
							loc_pr_error_confirm->e_error_state = K_LBFL_E_DETECTED;

							@COMMENT@/* RETRIEVE THE CONFIRMATION ATTRIBUTES (NB_OCC AND NB_CYCL) OF THE ERROR */@/COMMENT@
							loc_pr_error_confirm->ul_occ_min_nb = loc_r_lbfl_write_arg.pr_error_config->r_confirmation.ul_nb_occ;
							loc_pr_error_confirm->ul_nb_cycl_max = loc_r_lbfl_write_arg.pr_error_config->r_confirmation.ul_nb_cycl;

							@COMMENT@/* INITIATE THE CONFIRMATION PROCESS AND CONTROL THE RETURN OF THE CONFIRMATION PROCESS */@/COMMENT@
							loc_b_filt =  @BRANCH MARK=TA ID=13 SUM=10@@JUMP NAME="lbfl_filt"@lbfl_filt@/JUMP@(loc_pr_error_confirm )@/BRANCH@;
								
						break;@SHORTCUT MARK=TB ID=46@

						@COMMENT@/* IS ALREADY DETECTED BUT NOT CONFIRMED */@/COMMENT@
						@BRANCH MARK=TB ID=47 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=134 SUM=30@case K_LBFL_E_DETECTED:@/BRANCH@@/BRANCH@

							@COMMENT@/* RUN THE CONFIRMATION FILTER AND CONTROL THE RETURN */@/COMMENT@
							loc_b_filt = @BRANCH MARK=TA ID=14 SUM=10@@JUMP NAME="lbfl_filt"@lbfl_filt@/JUMP@(loc_pr_error_confirm )@/BRANCH@;

						break;@SHORTCUT MARK=TB ID=46@

						@COMMENT@/* IS CONFIRMED */@/COMMENT@
						@BRANCH MARK=TB ID=48 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=135 SUM=30@case K_LBFL_E_CONFIRMED:@/BRANCH@@/BRANCH@
						
							@COMMENT@/* INCREMENT THE NUMBER OF ERROR OCCURENCE */@/COMMENT@
							loc_b_filt =  @BRANCH MARK=TA ID=15 SUM=10@@JUMP NAME="lbfl_filt"@lbfl_filt@/JUMP@(loc_pr_error_confirm )@/BRANCH@;

						break;@SHORTCUT MARK=TB ID=46@

						@COMMENT@/* DEFAULT */@/COMMENT@
						@BRANCH MARK=TB ID=49 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=136 SUM=30@default:@/BRANCH@@/BRANCH@

							loc_b_filt =  K_LBFL_E_RETURN_CONFIRM;
@COMMENT@/*							MANAGE LBFL_MNG INTERNAL ERROR*/@/COMMENT@
							loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 =	loc_pr_error_confirm->e_error_state;
							@BRANCH MARK=TA ID=16 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
								(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_TRUE)@/BRANCH@;
							loc_b_lbfl_mng_fail = K_BOOL_TRUE;
							break;@SHORTCUT MARK=TB ID=46@
						}@/BRANCH@@/BRANCH@@/BRANCH@@/BRANCH@@/DECISION@
						@COMMENT@/*$ ENDCASE */@/COMMENT@
					}@/BRANCH@
					@BRANCH MARK=TB ID=51 SUM=20@else
					{
					@COMMENT@/* NOTHING TO DO */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@
					@COMMENT@/* ENDIF */@/COMMENT@

					@COMMENT@/*	TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET  */@/COMMENT@
					@DECISION SUM=20+21 ID=57|58@if (@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=137 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=138 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
					@BRANCH MARK=TB ID=57 SUM=20@{
						@COMMENT@/*$ PROCESS THE SPECIFIC CASE OF LATCHED ERRORS */@/COMMENT@
						@COMMENT@/*$ IN ORDER TO WRITE THEM IN BITE AT EACH OCCURENCE */@/COMMENT@
						@COMMENT@/*$ (EVEN IF GENERALLY, A LATCHED ERROR COULD OCCURED ONLY ONCE) */@/COMMENT@
						loc_b_filt = @POPUP@@POPUP@loc_b_filt@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=139 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=140 SUM=30@False@/BRANCH@@/POPUP@ || 
									( (@POPUP@loc_pr_error_confirm->e_error_state == K_LBFL_E_CONFIRMED@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=141 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=142 SUM=30@False@/BRANCH@@/POPUP@) &&
									  (@POPUP@loc_r_lbfl_write_arg.pr_error_config->r_confirmation.e_confirm_type == K_LBFL_E_LATCHED@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=143 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=144 SUM=30@False@/BRANCH@@/POPUP@) )@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=145&147|145&148 SUM=31@loc_b_filt@/BRANCH@ needs
      @BRANCH MARK=TE ID=145 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=147 SUM=32@FTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=145 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=148 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=146&148 SUM=31@loc_pr_error_confirm->e_error_state == K_LBFL_E_CONFIRMED@/BRANCH@ needs
      @BRANCH MARK=TE ID=146 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=148 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=146&147 SUM=31@loc_r_lbfl_write_arg.pr_error_config->r_confirmation. ...@/BRANCH@ needs
      @BRANCH MARK=TE ID=146 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=147 SUM=32@FTF@/BRANCH@=F@/POPUP@;


						@COMMENT@/* IF ERROR IS CONFIRMED, THEN INFORM OTHER PARTS (BITE,DEBUG,OS) ABOUT IT */@/COMMENT@
						@DECISION SUM=20+21 ID=55|56@if ( @POPUP@loc_b_filt == K_LBFL_E_RETURN_CONFIRM@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=149 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=150 SUM=30@False@/BRANCH@@/POPUP@ )
						@BRANCH MARK=TB ID=55 SUM=20@{		
							@COMMENT@/* CASE SPECIFICS TREAMENTS OF CRITICALITY LEVELS */@/COMMENT@
							@DECISION SUM=20+21 ID=52|53|54@switch ( loc_r_lbfl_write_arg.pr_error_config->e_criticality )							
							{
							@BRANCH NO@@BRANCH MARK=TE ID=151 SUM=30@case K_LBFL_E_WARNING:@/BRANCH@@/BRANCH@
							@BRANCH MARK=TB ID=52 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=152 SUM=30@case K_LBFL_E_CRITICALITY_NOT_DEFINED:@/BRANCH@@/BRANCH@

								@COMMENT@/* WE COMPOSE THE BASIC FAILURE MESSAGE AND LOG IT IN BITE */@/COMMENT@
								@COMMENT@/*---------------------------------------------------------*/@/COMMENT@								
								@BRANCH MARK=TA ID=17 SUM=10@@JUMP NAME="lbfl_mng_write"@lbfl_mng_write@/JUMP@
									(K_LBFL_E_WRITE_DEBUG_BITE, K_LBFL_E_WRITE_DEBUG_BITE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg )@/BRANCH@;

							break;

							@BRANCH MARK=TB ID=53 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=153 SUM=30@case K_LBFL_E_FATAL:@/BRANCH@@/BRANCH@
							
								@COMMENT@/* COMPOSE THE FATAL BASIC FAILURE MESSAGE AND LOG IT IN BITE WITHOUT CONFIRMATION PROCESS*/@/COMMENT@
								@BRANCH MARK=TA ID=18 SUM=10@@JUMP NAME="lbfl_mng_write"@lbfl_mng_write@/JUMP@
									(K_LBFL_E_WRITE_DEBUG_OS, K_LBFL_E_WRITE_DEBUG_OS, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg )@/BRANCH@;

								@COMMENT@/* - RAISE ERROR TO OS WITH RESET IN ALL CASES (OPSW) */@/COMMENT@
								@COMMENT@/*--------------------------------------------------------------*/@/COMMENT@

								@BRANCH MARK=TA ID=19 SUM=10@@JUMP NAME="RAISE_APPLICATION_ERROR"@RAISE_APPLICATION_ERROR@/JUMP@ (APPLICATION_ERROR, 
														 (MESSAGE_ADDR_TYPE)&stc_ul_error_msg, 
														 sizeof(stc_ul_error_msg), 
														 &loc_e_return_code)@/BRANCH@;

							break;

							@BRANCH MARK=TB ID=54 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=154 SUM=30@default:@/BRANCH@@/BRANCH@

								@COMMENT@/* COMPOSE THE FATAL BASIC FAILURE MESSAGE AND LOG IT IN BITE WITHOUT CONFIRMATION PROCESS*/@/COMMENT@
								loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 =	loc_r_lbfl_write_arg.pr_error_config->e_criticality;
								@BRANCH MARK=TA ID=20 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
									(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;

							break;
							}@/BRANCH@@/BRANCH@@/BRANCH@@/DECISION@
							@COMMENT@/* ENDCASE */@/COMMENT@	
						}@/BRANCH@
						@COMMENT@/* ELSE */@/COMMENT@
						@BRANCH MARK=TB ID=56 SUM=20@else
						{
							@COMMENT@/* NOTHING TO DO */@/COMMENT@
							;
						}@/BRANCH@@/DECISION@
						@COMMENT@/* ENDIF */@/COMMENT@
					}@/BRANCH@
					@COMMENT@/* ELSE */@/COMMENT@
					@BRANCH MARK=TB ID=58 SUM=20@else
					{
						@COMMENT@/* NOTHING TO DO */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@
					@COMMENT@/* ENDIF */@/COMMENT@

			@COMMENT@/* ELSE THE ERROR IS RAISED DURING INIT PHASE OR IT IS AN ALREADY APP_DISAPP MNG ERROR */@/COMMENT@
			}@/BRANCH@
			@BRANCH MARK=TB ID=65 SUM=20@else
			{		
                
					@COMMENT@/* NO CONFIRMATION MANAGEMENT, THE ERROR IS NOT STORED IN AN ARRAY OF CONFIRMATION;
					/* USED THE DEFAULT ERROR MNG STRUCTURE, IT WILL BE USED BY THE DEBUG */@/COMMENT@
					loc_r_lbfl_write_arg.pr_error_mng = pr_lbfl_error_mng;

                @COMMENT@/*	STORE THE LINE FOR DEBUG DISPLAY */@/COMMENT@
                loc_r_lbfl_write_arg.pr_error_mng->r_error_confirm.e_current_error_desc.ul_line	= loc_r_lbfl_write_arg.ul_fsc_component_line_number;
                				
				@COMMENT@/*	TEST IF THE BYPASS LBFL_MNG FLAG ISN'T SET */@/COMMENT@
				@DECISION SUM=20+21 ID=63|64@if (@POPUP@loc_b_lbfl_mng_fail == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=155 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=156 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
				@BRANCH MARK=TB ID=63 SUM=20@{
					@COMMENT@/* INITIALIZE THE FIELD : ERROR_LABEL, USED TO DISPLAY IT IN CASE OF DISAPPEARANCE DURING 
					LBFL_MAIN SCAN THROUGH THE USE OF LBFL_WRITE_DEBUG WITH CONSTRAINT TO HAVE IT ALSO FOR AN INTERNAL LBFL ERROR */@/COMMENT@
					loc_r_lbfl_write_arg.pr_error_mng->puc_error_label = (T_char *) &loc_r_lbfl_write_arg.pr_error_config->tuc_error_label[0];			
					@COMMENT@/* INITIALIZE THE FIELD : CSU_NAME, USED TO DISPLAY IT IN CASE OF DISAPPEARANCE DURING 
					   LBFL_MAIN SCAN */@/COMMENT@
					loc_r_lbfl_write_arg.pr_error_mng->puc_fsc_component_file_name = par_puc_fsc_component_file_name;

					@COMMENT@/* CASE SPECIFICS TREAMENTS OF CRITICALITY LEVELS */@/COMMENT@
					@DECISION SUM=20+21 ID=60|61|62@switch ( loc_r_lbfl_write_arg.pr_error_config->e_criticality )							
					{
					@BRANCH NO@@BRANCH MARK=TE ID=157 SUM=30@case K_LBFL_E_WARNING:@/BRANCH@@/BRANCH@
					@BRANCH MARK=TB ID=60 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=158 SUM=30@case K_LBFL_E_CRITICALITY_NOT_DEFINED:@/BRANCH@@/BRANCH@

						@COMMENT@/* WE COMPOSE THE BASIC FAILURE MESSAGE AND LOG IT IN BITE */@/COMMENT@
						@COMMENT@/*---------------------------------------------------------*/@/COMMENT@								
						@BRANCH MARK=TA ID=21 SUM=10@@JUMP NAME="lbfl_mng_write"@lbfl_mng_write@/JUMP@
							(K_LBFL_E_WRITE_DEBUG_BITE, K_LBFL_E_WRITE_DEBUG_BITE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg )@/BRANCH@;

					break;

					@BRANCH MARK=TB ID=61 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=159 SUM=30@case K_LBFL_E_FATAL:@/BRANCH@@/BRANCH@
					
						@COMMENT@/* COMPOSE THE FATAL BASIC FAILURE MESSAGE AND LOG IT IN BITE WITHOUT CONFIRMATION PROCESS */@/COMMENT@
						@BRANCH MARK=TA ID=22 SUM=10@@JUMP NAME="lbfl_mng_write"@lbfl_mng_write@/JUMP@
							(K_LBFL_E_WRITE_DEBUG_OS, K_LBFL_E_WRITE_DEBUG_OS, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg )@/BRANCH@;

						@COMMENT@/* - RAISE ERROR TO OS WITH RESET IN ALL CASES (OPSW) */@/COMMENT@
						@COMMENT@/*--------------------------------------------------------------*/@/COMMENT@

						@BRANCH MARK=TA ID=23 SUM=10@@JUMP NAME="RAISE_APPLICATION_ERROR"@RAISE_APPLICATION_ERROR@/JUMP@ (APPLICATION_ERROR, 
												 (MESSAGE_ADDR_TYPE)&stc_ul_error_msg, 
												 sizeof(stc_ul_error_msg), 
												 &loc_e_return_code)@/BRANCH@;

					break;

					@BRANCH MARK=TB ID=62 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=160 SUM=30@default:@/BRANCH@@/BRANCH@

						@COMMENT@/* COMPOSE THE FATAL BASIC FAILURE MESSAGE AND LOG IT IN BITE WITHOUT CONFIRMATION PROCESS */@/COMMENT@
						loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 =	loc_r_lbfl_write_arg.pr_error_config->e_criticality;
						@BRANCH MARK=TA ID=24 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
							(K_LBFL_E_FSC_ERR_SWDEFAULT_ERR_STATE, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;

					break;
					}@/BRANCH@@/BRANCH@@/BRANCH@@/DECISION@

					@COMMENT@/* ENDCASE */@/COMMENT@	
				}@/BRANCH@
				@COMMENT@/* ELSE */@/COMMENT@
				@BRANCH MARK=TB ID=64 SUM=20@else
				{
					@COMMENT@/* NOTHING TO DO */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@
			}@/BRANCH@@/DECISION@
			@COMMENT@/* ENDIF */@/COMMENT@

		@COMMENT@/* ELSE */@/COMMENT@
		}@/BRANCH@
		@BRANCH MARK=TB ID=67 SUM=20@else 
		{
			@COMMENT@/* PROCESS A LBFL INTERNAL ERROR */@/COMMENT@
			loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 = loc_r_lbfl_write_arg.ul_process_id;
			loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_2 = tr_lbfl_global_error_mng[loc_r_lbfl_write_arg.ul_process_id][K_LBFL_E_FSC_LEVEL].ul_process_id;
			@BRANCH MARK=TA ID=25 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
				(K_LBFL_E_FSC_ERR_PROCESS_ID, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
		}@/BRANCH@@/DECISION@
		@COMMENT@/* ENDIF */@/COMMENT@
   	}@/BRANCH@
	@COMMENT@/* ELSE */@/COMMENT@
	@BRANCH MARK=TB ID=69 SUM=20@else
	{
		@COMMENT@/* PROCESS A LBFL INTERNAL ERROR */@/COMMENT@
		loc_r_lbfl_mng_fail_write_arg.ul_ctxt_data_1 = e_lbfl_failure_init_status;
		@BRANCH MARK=TA ID=26 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@  
			(K_LBFL_E_FSC_ERR_INIT, __LINE__, &loc_r_lbfl_mng_fail_write_arg, &loc_r_lbfl_write_arg, K_BOOL_FALSE)@/BRANCH@;
	}@/BRANCH@@/DECISION@
	@COMMENT@/* ENDIF */@/COMMENT@

	ul_lbfl_call_number = 0;
	return;@SHORTCUT MARK=TB ID=70@
}@/BRANCH@@/NODE@


@COMMENT@/******************************************************************************
 ***** 
 ***** static	T_boolean lbfl_fsc_index
 ***** 
 ***** Description : TO determine the FSC calling the error mng service
 ***** 
 ***** Input :
 ***** 
 *****              par_puc_fsc_name : 
 ***** 
 *****              T_uint32 par_ul_process_id : 
 ***** 
 *****              T_uint32 par_ul_fsc_max_number : 
 ***** 
 *****              T_uint32 *par_pul_fsc_index : 
 ***** 
 *****              T_uint32 *par_pul_process_and_fsc_id : 
 ***** 
 ***** 
 ***** Output : 
 ***** 
 *****************************************************************************/@/COMMENT@

 static	T_boolean @NODE TYPE=FUNCTION NAME="lbfl_fsc_index"@@LINK NAME="lbfl_fsc_index"@lbfl_fsc_index
			(T_char	*par_puc_fsc_name,
			T_uint32 par_ul_process_id,
			T_uint32 par_ul_fsc_max_number,
			T_uint32 *par_pul_fsc_index,
			T_uint32 *par_pul_process_and_fsc_id)
@BRANCH MARK=TB ID=86 SUM=20@{
	T_uint32	loc_ul_process_id		= 1UL;
	T_boolean	loc_b_found				= K_BOOL_FALSE;
	T_uint32	loc_ul_fsc_max_number	= par_ul_fsc_max_number;

	@DECISION SUM=20+21 ID=71|85@if (@BRANCH MARK=TA ID=27 SUM=10@@POPUP@@JUMP NAME="lbstr_cmp"@lbstr_cmp@/JUMP@ ( par_puc_fsc_name, "LBFL")@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=161 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=162 SUM=30@False@/BRANCH@@/POPUP@@/BRANCH@ )
	@BRANCH MARK=TB ID=71 SUM=20@{
		*par_pul_process_and_fsc_id =	(par_ul_process_id << 5) + K_LBFL_E_LBFL_FSC_ID;
		loc_b_found	= K_BOOL_TRUE;
	}@/BRANCH@
	@BRANCH MARK=TB ID=85 SUM=20@else
	{
		@DECISION SUM=20+21 ID=79|84@if (@POPUP@par_ul_process_id == @ALT@K_LBFL_INIT_PARTITION_PHASE@-ALT@0@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=163 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=164 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
		@BRANCH MARK=TB ID=79 SUM=20@{
			@COMMENT@/* Find if requested fsc name exist in one of the fsc name table */@/COMMENT@
			@POPUP@do@-POPUP@loop branches :
@BRANCH MARK=TB ID=77 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=78 SUM=22@  2 loops or more@/BRANCH@@/POPUP@
			@BRANCH MARK=TB ID=76 SUM=20@{	
				loc_ul_fsc_max_number = tr_lbfl_global_error_mng[loc_ul_process_id][K_LBFL_E_PARTITION_LEVEL].ul_component_number;

	@COMMENT@/*			If the process id has been in lbfl process init phase well initialized */@/COMMENT@
				@DECISION SUM=20+21 ID=74|75@if (@POPUP@tr_process_error_config[loc_ul_process_id].ul_process_id != K_LBFL_MAX_PROCESS_NB + 1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=165 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=166 SUM=30@False@/BRANCH@@/POPUP@)
				@BRANCH MARK=TB ID=74 SUM=20@{
					@DECISION SUM=20+21 ID=72|73@if (@BRANCH MARK=TA ID=28 SUM=10@@POPUP@@JUMP NAME="lbfl_fsc_index_limited"@lbfl_fsc_index_limited@/JUMP@ ((T_char *)	par_puc_fsc_name, 
												(T_lbfl_r_cst_fsc_name_config *) tr_process_error_config[loc_ul_process_id].pr_process_fsc_name_config,
												 loc_ul_fsc_max_number,	
												 par_pul_fsc_index)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=167 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=168 SUM=30@False@/BRANCH@@/POPUP@@/BRANCH@)
					@BRANCH MARK=TB ID=72 SUM=20@{
						@COMMENT@/* Provide the corresponding fsc_id value value */@/COMMENT@
						*par_pul_process_and_fsc_id =	(loc_ul_process_id << 5) + *par_pul_fsc_index;
						
						loc_b_found		 = K_BOOL_TRUE;
					}@/BRANCH@
					@BRANCH MARK=TB ID=73 SUM=20@else
					{
						@COMMENT@/* Nothing to do : skip to next table */@/COMMENT@
						;
					}@/BRANCH@@/DECISION@
				}@/BRANCH@
				@BRANCH MARK=TB ID=75 SUM=20@else
				{
					@COMMENT@/* Nothing to do : skip to next table */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@
				loc_ul_process_id++;

			}@/BRANCH@ while (@POPUP@@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=169 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=170 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ && @POPUP@loc_ul_process_id < @ALT@K_LBFL_MAX_PROCESS_NB@-ALT@5@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=171 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=172 SUM=30@False@/BRANCH@@/POPUP@@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=173&175 SUM=31@loc_b_found == 0UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=173 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=175 SUM=32@FX@/BRANCH@=F
  @BRANCH MARK=TE ID=173&174 SUM=31@loc_ul_process_id < 5@/BRANCH@ needs
      @BRANCH MARK=TE ID=173 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=174 SUM=32@TF@/BRANCH@=F@/POPUP@@/ALT@);
		}@/BRANCH@
		@BRANCH MARK=TB ID=84 SUM=20@else
		{
			@DECISION SUM=20+21 ID=82|83@if (@POPUP@tr_process_error_config[par_ul_process_id].ul_process_id != K_LBFL_MAX_PROCESS_NB + 1@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=176 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=177 SUM=30@False@/BRANCH@@/POPUP@)
			@BRANCH MARK=TB ID=82 SUM=20@{
				@DECISION SUM=20+21 ID=80|81@if (@BRANCH MARK=TA ID=29 SUM=10@@POPUP@@JUMP NAME="lbfl_fsc_index_limited"@lbfl_fsc_index_limited@/JUMP@ ((T_char *)	par_puc_fsc_name, 
											(T_lbfl_r_cst_fsc_name_config	*)	tr_process_error_config[par_ul_process_id].pr_process_fsc_name_config,
											 loc_ul_fsc_max_number,		
											 par_pul_fsc_index)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=178 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=179 SUM=30@False@/BRANCH@@/POPUP@@/BRANCH@)
				@BRANCH MARK=TB ID=80 SUM=20@{
					@COMMENT@/* Provide the corresponding fsc_id value value */@/COMMENT@
					*par_pul_process_and_fsc_id =	(((	par_ul_process_id	)	<< 5) +
													 (	*par_pul_fsc_index			)	);
					loc_b_found		 = K_BOOL_TRUE;
				}@/BRANCH@
				@BRANCH MARK=TB ID=81 SUM=20@else
				{
					@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
					;
				}@/BRANCH@@/DECISION@
			}@/BRANCH@
			@BRANCH MARK=TB ID=83 SUM=20@else
			{
				@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
			}@/BRANCH@@/DECISION@
		}@/BRANCH@@/DECISION@
	}@/BRANCH@@/DECISION@

	return (loc_b_found);@SHORTCUT MARK=TB ID=86@
}@/BRANCH@@/NODE@


@COMMENT@/******************************************************************************
 ***** 
 ***** static	T_boolean lbfl_fsc_index_limited
 ***** 
 ***** Description : TO determine the FSC calling the error mng service limited 
 *****				to the process_id
 *****
 ***** Input :
 ***** 
 *****              T_char *par_puc_fsc_name : 
 ***** 
 *****              T_lbfl_r_cst_fsc_name_config *par_pr_fsc_name_config : 
 ***** 
 *****              T_uint32 par_ul_fsc_max_number : 
 ***** 
 *****              T_uint32 *par_pul_fsc_index : 
 ***** 
 ***** 
 ***** Output : 
 ***** 
 *****************************************************************************/@/COMMENT@

static	T_boolean @NODE TYPE=FUNCTION NAME="lbfl_fsc_index_limited"@@LINK NAME="lbfl_fsc_index_limited"@lbfl_fsc_index_limited
			(T_char *par_puc_fsc_name,
			T_lbfl_r_cst_fsc_name_config *par_pr_fsc_name_config,
			T_uint32 par_ul_fsc_max_number,
			T_uint32 *par_pul_fsc_index)
@BRANCH MARK=TB ID=92 SUM=20@{
	T_uint32	loc_ul_fsc_index	= 0UL;
	T_boolean	loc_b_found			= K_BOOL_FALSE;

	@COMMENT@/* Find if requested fsc name exist in the fsc name table */@/COMMENT@
	@POPUP@do@-POPUP@loop branches :
@BRANCH MARK=TB ID=90 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=91 SUM=22@  2 loops or more@/BRANCH@@/POPUP@
	@BRANCH MARK=TB ID=89 SUM=20@{
		@DECISION SUM=20+21 ID=87|88@if (@BRANCH MARK=TA ID=30 SUM=10@@POPUP@@JUMP NAME="lbstr_cmp"@lbstr_cmp@/JUMP@ ( par_puc_fsc_name, par_pr_fsc_name_config[loc_ul_fsc_index].tuc_fsc_name)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=180 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=181 SUM=30@False@/BRANCH@@/POPUP@@/BRANCH@ )
		@BRANCH MARK=TB ID=87 SUM=20@{
			@COMMENT@/* Provide the corresponding fsc_id value value */@/COMMENT@
			*par_pul_fsc_index	= par_pr_fsc_name_config[loc_ul_fsc_index].ul_fsc_id;
			loc_b_found			= K_BOOL_TRUE;
		}@/BRANCH@
		@BRANCH MARK=TB ID=88 SUM=20@else
		{
			@COMMENT@/* Nothing to do : skip to next element */@/COMMENT@
			;
		}@/BRANCH@@/DECISION@
		loc_ul_fsc_index++;
	}@/BRANCH@ while (@POPUP@(@POPUP@loc_b_found == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=182 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=183 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) && (@POPUP@loc_ul_fsc_index < par_ul_fsc_max_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=184 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=185 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=186&188 SUM=31@loc_b_found == 0UL@/BRANCH@ needs
      @BRANCH MARK=TE ID=186 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=188 SUM=32@FX@/BRANCH@=F
  @BRANCH MARK=TE ID=186&187 SUM=31@loc_ul_fsc_index < par_ul_fsc_max_number@/BRANCH@ needs
      @BRANCH MARK=TE ID=186 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=187 SUM=32@TF@/BRANCH@=F@/POPUP@);

	return (loc_b_found);@SHORTCUT MARK=TB ID=92@
}@/BRANCH@@/NODE@


@COMMENT@/******************************************************************************
 ***** 
 ***** static	void lbfl_mng_lbfl_mng_internal_error
 ***** 
 ***** Description : 
 ***** 
 ***** Input :
 ***** 
 *****              T_lbfl_e_fsc_err_index par_e_error_id : 
 ***** 
 *****              T_uint32 par_ul_line : 
 ***** 
 *****              *par_pr_lbfl_mng_fail_write_arg : 
 ***** 
 *****              T_lbfl_r_lbfl_write_arg *par_pr_lbfl_write_arg : 
 ***** 
 *****              T_boolean par_b_fatal_error_test : 
 ***** 
 ***** 
 ***** Output : 
 ***** 
 *****************************************************************************/@/COMMENT@

static	void @NODE TYPE=FUNCTION NAME="lbfl_mng_lbfl_mng_internal_error"@@LINK NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error
			(T_lbfl_e_fsc_err_index par_e_error_id,
		T_uint32				par_ul_line,
		T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_mng_fail_write_arg,
		T_lbfl_r_lbfl_write_arg *par_pr_lbfl_write_arg,
			T_boolean par_b_fatal_error_test)
@BRANCH MARK=TB ID=93 SUM=20@{
	@BRANCH MARK=TA ID=31 SUM=10@@JUMP NAME="lbfl_save_previous_error_arg"@lbfl_save_previous_error_arg@/JUMP@ (par_pr_lbfl_write_arg, par_pr_lbfl_mng_fail_write_arg)@/BRANCH@;
	@BRANCH MARK=TA ID=32 SUM=10@@JUMP NAME="lbfl_mng_lbfl_internal_error"@lbfl_mng_lbfl_internal_error@/JUMP@ (par_e_error_id, par_ul_line, par_pr_lbfl_mng_fail_write_arg, par_pr_lbfl_write_arg, par_b_fatal_error_test)@/BRANCH@;
	return;@SHORTCUT MARK=TB ID=93@
}@/BRANCH@@/NODE@



@COMMENT@/******************************************************************************
 ***** 
 ***** static T_boolean lbfl_manage_ctx_data 
 ***** 
 ***** Description : 
 ***** 
 ***** Input :
 ***** 
 *****              par_pr_lbfl_write_arg : 
 ***** 
 *****              *par_pr_lbfl_mng_fail_write_arg : 
 ***** 
 *****              par_b_fatal_error_test : 
 ***** 
 ***** 
 ***** Output : 
 ***** 
 *****************************************************************************/@/COMMENT@

static T_boolean @NODE TYPE=FUNCTION NAME="lbfl_manage_ctx_data"@@LINK NAME="lbfl_manage_ctx_data"@lbfl_manage_ctx_data (T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_write_arg, 
										T_lbfl_r_lbfl_write_arg	*par_pr_lbfl_mng_fail_write_arg,
                                        T_uchar *par_tuc_ctxt_area,
										T_boolean par_b_fatal_error_test)
                                        
@BRANCH MARK=TB ID=108 SUM=20@{
	T_boolean loc_b_lbfl_mng_fail = K_BOOL_FALSE;
	T_uint32 loc_i;
	
	@COMMENT@/*	TEST IF THE DATA AREA /= 0 BUT WITH NULL POINTER DATA_AREA /= 0 */@/COMMENT@
	@DECISION SUM=20+21 ID=96|107@if (@POPUP@par_pr_lbfl_write_arg->puc_ctxt_data_area == @ALT@K_NULL_PTR@-ALT@((T_ptr)0)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=189 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=190 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
	@BRANCH MARK=TB ID=96 SUM=20@{
		@DECISION SUM=20+21 ID=94|95@if (@POPUP@par_pr_lbfl_write_arg->ul_ctxt_data_area_size@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=191 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=192 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=94 SUM=20@{
			@COMMENT@/* CTX DATA UNUSABLE */@/COMMENT@
			par_pr_lbfl_write_arg->ul_ctxt_data_area_size = 0UL;
			
			@COMMENT@/*	MANAGE LBFL_MNG ERROR */@/COMMENT@
			@BRANCH MARK=TA ID=33 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@ 
				(K_LBFL_E_FSC_WARNING_ERR_PTR_NULL, __LINE__, par_pr_lbfl_mng_fail_write_arg, par_pr_lbfl_write_arg, par_b_fatal_error_test)@/BRANCH@;
			
			loc_b_lbfl_mng_fail = K_BOOL_TRUE;
		}@/BRANCH@
		@BRANCH MARK=TB ID=95 SUM=20@else
		{
			@COMMENT@/* NOTHING TO DO */@/COMMENT@;
		}@/BRANCH@@/DECISION@ 
		@COMMENT@/*$ ENDIF */@/COMMENT@

    }@/BRANCH@
	@BRANCH MARK=TB ID=107 SUM=20@else
	{
		@COMMENT@/* TEST IF DATA TO SAVE ARE SMALLER THAN 84UL */@/COMMENT@
		@DECISION SUM=20+21 ID=101|106@if (@POPUP@par_pr_lbfl_write_arg->ul_ctxt_data_area_size <= @ALT@MAX_ENGINEERING_DATA_SIZE@-ALT@84@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=193 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=194 SUM=30@False@/BRANCH@@/POPUP@@/ALT@) 
		@BRANCH MARK=TB ID=101 SUM=20@{
			@COMMENT@/* Copy area contain in local area */@/COMMENT@
			@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=98 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=99 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=100 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i = 0 ; @POPUP@loc_i < par_pr_lbfl_write_arg->ul_ctxt_data_area_size@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=195 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=196 SUM=30@False@/BRANCH@@/POPUP@ ; loc_i ++)
			@BRANCH MARK=TB ID=97 SUM=20@{
				par_tuc_ctxt_area[loc_i] = *par_pr_lbfl_write_arg->puc_ctxt_data_area;
				par_pr_lbfl_write_arg->puc_ctxt_data_area ++;
				
			}@/BRANCH@
		}@/BRANCH@
		@BRANCH MARK=TB ID=106 SUM=20@else
		{
			@COMMENT@/* USE ONLY FIRT 84 CARACTERS */@/COMMENT@
			par_pr_lbfl_write_arg->ul_ctxt_data_area_size = MAX_ENGINEERING_DATA_SIZE;
			
			@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=103 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=104 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=105 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i = 0 ; @POPUP@loc_i < @ALT@MAX_ENGINEERING_DATA_SIZE@-ALT@84@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=197 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=198 SUM=30@False@/BRANCH@@/POPUP@@/ALT@ ; loc_i ++)
			@BRANCH MARK=TB ID=102 SUM=20@{
				par_tuc_ctxt_area[loc_i] = par_pr_lbfl_write_arg->puc_ctxt_data_area[loc_i];
			}@/BRANCH@
			
			@COMMENT@/*	MANAGE LBFL_MNG ERROR */@/COMMENT@
			@BRANCH MARK=TA ID=34 SUM=10@@JUMP NAME="lbfl_mng_lbfl_mng_internal_error"@lbfl_mng_lbfl_mng_internal_error@/JUMP@ 
				(K_LBFL_E_FSC_WARNING_ERR_CTXT_SIZE, __LINE__, par_pr_lbfl_mng_fail_write_arg, par_pr_lbfl_write_arg, par_b_fatal_error_test)@/BRANCH@;
			
			loc_b_lbfl_mng_fail = K_BOOL_TRUE;
		}@/BRANCH@@/DECISION@
	}@/BRANCH@@/DECISION@ 
	@COMMENT@/*$ ENDIF */@/COMMENT@
			
    @COMMENT@/* Use the local area as a working area */@/COMMENT@
	par_pr_lbfl_write_arg->puc_ctxt_data_area = par_tuc_ctxt_area;


	return (loc_b_lbfl_mng_fail);@SHORTCUT MARK=TB ID=108@ 
}@/BRANCH@@/NODE@

@COMMENT@/*********************** End of file *******************************/@/COMMENT@@/NODE /RIK@
