VE 3.0d CCOV CMCDC #i3
FC "SAMC_DATA_INIT.C" "D:\\VIEWSNAP\\IC_CDS_A400M\\CDS_A400M_DEV\\SA\\SAMC\\SRC\\"
FD 1285925478
TC PR RE AP BS BT BI BL CO CC
AP 0 "samc_data_init" "sadi_get_local_du_id" 226 226
CE 0 "samc_data_init" "e_samc_data_local_du_id ==  ..." 234 234
AP 1 "samc_data_init" "lbfl_mng" 237 244
BL 0 simple "samc_data_init" /then 235 245
BL 1 simple "samc_data_init" /else 247 249
CE 2 "samc_data_init" "loc_i < R_SAMC_CFG. ..." 254 254
CE 4 "samc_data_init" "loc_pr_c_api_port_entry-> ..." 263 263
CE 6 "samc_data_init" "loc_k < 9" 266 266
CE 8 "samc_data_init" "e_samc_data_local_du_id ==  ..." 268 268
BL 2 simple "samc_data_init" /for/then/for/then 269 272
BL 3 simple "samc_data_init" /for/then/for/else 274 276
BL 4 simple "samc_data_init" /for/then/for 267 277
BL 5 logical "samc_data_init" /for/then/for/0 266 277
BL 6 logical "samc_data_init" /for/then/for/1 266 277
BL 7 logical "samc_data_init" /for/then/for/2+ 266 277
BL 8 simple "samc_data_init" /for/then 264 278
CE 10 "samc_data_init" "loc_k < 9" 282 282
CE 12 "samc_data_init" "e_samc_data_local_du_id ==  ..." 284 284
BL 9 simple "samc_data_init" /for/else/for/then 285 288
BL 10 simple "samc_data_init" /for/else/for/else 290 292
BL 11 simple "samc_data_init" /for/else/for 283 293
BL 12 logical "samc_data_init" /for/else/for/0 282 293
BL 13 logical "samc_data_init" /for/else/for/1 282 293
BL 14 logical "samc_data_init" /for/else/for/2+ 282 293
BL 15 simple "samc_data_init" /for/else 280 294
CE 14 "samc_data_init" "loc_b_get_port_id == 0UL" 296 296
BL 16 simple "samc_data_init" /for/then 297 301
CE 16 "samc_data_init" "loc_pr_c_api_port_entry->tc_ ..." 304 304
AP 2 "samc_data_init" "GET_SAMPLING_PORT_ID" 306 309
BL 17 simple "samc_data_init" /for/else/then 305 310
AP 3 "samc_data_init" "GET_QUEUING_PORT_ID" 313 316
BL 18 simple "samc_data_init" /for/else/else 312 317
CE 18 "samc_data_init" "loc_e_return_code == NO_ERROR" 319 319
BL 19 simple "samc_data_init" /for/else/then 320 322
AP 4 "samc_data_init" "lbfl_mng" 326 333
BL 20 simple "samc_data_init" /for/else/else 324 334
CE 20 "samc_data_init" "lbstr_cmp ( ..." 336 336
AP 5 "samc_data_init" "lbstr_cmp" 336 336
CE 22 "samc_data_init" "e_samc_data_local_du_id ==  ..." 337 337
CE 24 "samc_data_init" "e_samc_data_local_du_id ==  ..." 338 338
CC 26 3 20 22 24 4 TXXFTXFFTFFF 3
BL 21 simple "samc_data_init" /for/else/then 339 341
AP 6 "samc_data_init" "GET_SAMPLING_PORT_ID" 345 348
CE 30 "samc_data_init" "loc_e_return_code == NO_ERROR" 350 350
BL 22 simple "samc_data_init" /for/else/else/then 351 353
AP 7 "samc_data_init" "lbfl_mng" 357 364
BL 23 simple "samc_data_init" /for/else/else/else 355 365
BL 24 simple "samc_data_init" /for/else/else 343 366
BL 25 simple "samc_data_init" /for/else 303 367
CE 32 "samc_data_init" "loc_j < loc_pr_c_api_port_en ..." 373 373
CE 34 "samc_data_init" "loc_k < 4" 391 391
BL 26 simple "samc_data_init" /for/for/for 392 394
BL 27 logical "samc_data_init" /for/for/for/0 391 394
BL 28 logical "samc_data_init" /for/for/for/1 391 394
BL 29 logical "samc_data_init" /for/for/for/2+ 391 394
BL 30 simple "samc_data_init" /for/for 374 395
BL 31 logical "samc_data_init" /for/for/0 373 395
BL 32 logical "samc_data_init" /for/for/1 373 395
BL 33 logical "samc_data_init" /for/for/2+ 373 395
CE 36 "samc_data_init" "loc_pr_c_api_port_entry-> ..." 398 398
BL 34 simple "samc_data_init" /for/then 399 415
BL 35 simple "samc_data_init" /for/else 417 419
CE 38 "samc_data_init" "loc_pr_c_api_port_entry-> ..." 421 421
CE 40 "samc_data_init" "loc_pr_c_api_port_entry-> ..." 422 422
CC 42 2 38 40 3 TTTFFX 1
AP 8 "samc_data_init" "lbmem_set" 425 425
BL 36 simple "samc_data_init" /for/then 423 426
AP 9 "samc_data_init" "lbmem_set" 430 430
AP 10 "samc_data_init" "lbmem_set" 431 431
AP 11 "samc_data_init" "lbmem_set" 432 432
AP 12 "samc_data_init" "lbmem_set" 433 433
BL 37 simple "samc_data_init" /for/else 428 434
CE 45 "samc_data_init" "loc_j < loc_pr_c_api_port_en ..." 437 437
CE 47 "samc_data_init" "loc_pr_c_api_port_entry-> ..." 439 439
BL 38 simple "samc_data_init" /for/for/then 440 444
BL 39 simple "samc_data_init" /for/for/else 446 448
BL 40 simple "samc_data_init" /for/for 438 449
BL 41 logical "samc_data_init" /for/for/0 437 449
BL 42 logical "samc_data_init" /for/for/1 437 449
BL 43 logical "samc_data_init" /for/for/2+ 437 449
BL 44 simple "samc_data_init" /for 255 450
BL 45 logical "samc_data_init" /for/0 254 450
BL 46 logical "samc_data_init" /for/1 254 450
BL 47 logical "samc_data_init" /for/2+ 254 450
PR 0 return "samc_data_init" 452 452
PR 1 proc "samc_data_init" 202 453
BL 48 simple "samc_data_init" / 202 453
DC 39804162
@RIK
  TOKEN="CCOV CMCDC"
  SRC="SAMC_DATA_INIT.C"
  DIR="D:\VIEWSNAP\IC_CDS_A400M\CDS_A400M_DEV\SA\SAMC\SRC\"
  DATE=1285925478
  CHECKSUM=39804162
  SUMS
   ("&Functions"=0,
    "-&Exits"=1,
    "Functions and exits"=0+1),
   ("&Calls"=10),
   ("Statement &blocks"=20,
    "-&Implicit blocks"=21,
    "Decisions"=20+21,
    "&Loops"=22),
   ("Basic &conditions"=30,
    "&Modified conditions"=31,
    "M&ultiple conditions"=32)
  ERRORS
    32="a source object was not linked with the right runtime object (check instrumentation mode)",
    49="a composition of conditions evaluates in an unexpected result, contact your vendor",
    50="a composition of conditions reached with an unexpected input vector, contact your vendor"
NODE TYPE=FILE NAME="SAMC_DATA_INIT.C"@@COMMENT@/******************************************************************************
 **
 **                                   ==============
 **                                   IDENTIFICATION
 **                                   ==============
 **
 **
 **
 **  Filename            : samc_data_init.c
 **
 **  Author/ Company     : N.Roucou / THALES Avionics
 **
 **  Creation date       : 24/09/2003
 **
 **  Copyright statement : Copyright (C); 2003
 **                        THALES Avionics
 **
 **  Module description  : System Application Message Concentrator
 **						   Intialization of source and destination port,
 **						   validity of the message, header and size of message port.	
 **
 **
 *****************************************************************************/@/COMMENT@


@COMMENT@/******************************************************************************
 **                           Project specific includes
 *****************************************************************************/@/COMMENT@
@COMMENT@/* MACS TYPES */@/COMMENT@

@COMMENT@/* SA TYPES */@/COMMENT@

@COMMENT@/* PLATFORM TYPES */@/COMMENT@

@COMMENT@/* CALLED CSU TYPES */@/COMMENT@
@COMMENT@#include "lbmem.h"@/COMMENT@
@COMMENT@#include "sacr.h"@/COMMENT@

@COMMENT@/* CALLED CSU PROTOTYPES */@/COMMENT@
@COMMENT@#include "LBSTR_CMP.p"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Module specific includes
 *****************************************************************************/@/COMMENT@

@COMMENT@#include "samc_data_init.p"@/COMMENT@

@COMMENT@#include "samc_data.h"@/COMMENT@
@COMMENT@#include "samc_cfg.h"/* only to point SAMC configuration's global variable */@/COMMENT@
@COMMENT@#include "samc_fsc_error_desc_config.h"@/COMMENT@
@COMMENT@#include "samc_component_id_ifc.h"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Local file declarations
 *****************************************************************************/@/COMMENT@

@COMMENT@/* local DU id */@/COMMENT@
T_sadi_du_id e_samc_data_local_du_id;

@COMMENT@/* CAN message emission  : one emission for two cyle */@/COMMENT@
T_boolean	b_samc_can_msg_emission;

@COMMENT@/* For memorization of active CAN bus */@/COMMENT@
T_sacr_e_can_buses e_samc_save_bus_can_active;

@COMMENT@/* Crostalk incompatible */@/COMMENT@
T_boolean b_samc_crosstalk_incompatible;


@COMMENT@/* DATA BUFFERS' INFORMATIONS */@/COMMENT@

@COMMENT@/* MSG1 (AFDX) */@/COMMENT@
T_uchar tuc_samc_data_msg1_send_buffer[K_SAMC_MAX_SIZE_SPORT_MSG1];


T_uchar tuc_samc_data_msg1_recv_buffers1[K_SAMC_MAX_NB_DU][K_SAMC_MAX_SIZE_SPORT_MSG1];
T_uchar tuc_samc_data_msg1_recv_buffers2[K_SAMC_MAX_NB_DU][K_SAMC_MAX_SIZE_SPORT_MSG1];
T_uchar tuc_samc_data_msg1_recv_buffers3[K_SAMC_MAX_NB_DU][K_SAMC_MAX_SIZE_SPORT_MSG1];
T_uchar tuc_samc_data_msg1_recv_buffers4[K_SAMC_MAX_NB_DU][K_SAMC_MAX_SIZE_SPORT_MSG1];

T_uint8 tuc_NbMessageQueuingOL;
T_uint8 tuc_NbMessageQueuingIL;
T_uint8 tuc_NbMessageQueuingLL;
T_uint8 tuc_NbMessageQueuingCL;
T_uint8 tuc_NbMessageQueuingCR;
T_uint8 tuc_NbMessageQueuingOR;
T_uint8 tuc_NbMessageQueuingIR;
T_uint8 tuc_NbMessageQueuingLR;
T_uint8 tuc_NbMessageQueuing3C;
T_uint8 tuc_NbMessageQueuingStub;






@COMMENT@/* MSG2 (AFDX) */@/COMMENT@
T_uchar tuc_samc_data_msg2_send_buffer[K_SAMC_MAX_SIZE_SPORT_MSG2];
T_uchar tuc_samc_data_msg2_recv_buffers[K_SAMC_MAX_NB_DU][K_SAMC_MAX_SIZE_SPORT_MSG2];

@COMMENT@/* MSG3 (CAN) */@/COMMENT@
T_uchar tuc_samc_data_msg3_send_buffer[K_SAMC_MAX_SIZE_SPORT_MSG3];
T_uchar tuc_samc_data_msg3_recv_buffers[K_SAMC_MAX_NB_DU][K_SAMC_MAX_NB_CAN_BUFFER][K_SAMC_MAX_SIZE_SPORT_MSG3];


@COMMENT@/* CACHE BUFFERS' INFORMATIONS */@/COMMENT@

T_samc_data_cache_recv_buffer_def	tr_samc_data_cache_recv_buffers_def[K_SAMC_MAX_NB_API_PORT_RECV];


@COMMENT@/* API PORTS' INFORMATIONS */@/COMMENT@

@COMMENT@/* MSG1 (AFDX) */@/COMMENT@
T_samc_data_api_port_desc r_samc_data_msg1_api_send_desc;
T_samc_data_api_port_desc tr_samc_data_msg1_api_recv_descs[K_SAMC_MAX_NB_DU];

@COMMENT@/* MSG2 (AFDX) */@/COMMENT@
T_samc_data_api_port_desc r_samc_data_msg2_api_send_desc;
T_samc_data_api_port_desc tr_samc_data_msg2_api_recv_descs[K_SAMC_MAX_NB_DU];

@COMMENT@/* MSG3 (CAN) */@/COMMENT@
T_samc_data_api_port_desc tr_samc_data_msg3_api_send_descs[K_SAMC_MAX_NB_DU];
T_samc_data_api_port_desc tr_samc_data_msg3_api_recv_descs[K_SAMC_MAX_NB_DU];


@COMMENT@/* MSG PORTS' INFORMATIONS */@/COMMENT@

@COMMENT@/* MSG1 (AFDX) */@/COMMENT@

T_samc_data_msg_port_desc r_samc_data_sarm_sys_send_desc;
T_samc_data_msg_port_desc tr_samc_data_sarm_sys_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_safb_res_afdx_send_desc;
T_samc_data_msg_port_desc tr_samc_data_safb_res_afdx_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_said_pp_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_said_pp_recv_descs[K_SAMC_MAX_NB_DU];

@COMMENT@/* MSG2 (AFDX) */@/COMMENT@

T_samc_data_msg_port_desc r_samc_data_saco_load_pn_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_saco_load_pn_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sadi_remote_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_sadi_remote_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sarmpim_left_send_desc;
T_samc_data_msg_port_desc tr_samc_data_sarmpim_left_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sarmpim_right_send_desc;
T_samc_data_msg_port_desc tr_samc_data_sarmpim_right_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_saco_ident_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_saco_ident_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sacc_can_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_sacc_can_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sacc_maint_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_sacc_maint_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_same_media_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_same_media_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_class_chrono_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_class_chrono_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc r_samc_data_sarm_local_hmi_send_desc; 
T_samc_data_msg_port_desc tr_samc_data_sarm_local_hmi_recv_descs[K_SAMC_MAX_NB_DU];

@COMMENT@/* MSG3 (CAN) */@/COMMENT@

T_samc_data_msg_port_desc tr_samc_data_fs_data_send_descs[K_SAMC_MAX_NB_DU];
T_samc_data_msg_port_desc tr_samc_data_fs_data_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc tr_samc_data_safb_fp_send_descs[K_SAMC_MAX_NB_DU];
T_samc_data_msg_port_desc tr_samc_data_safb_fp_recv_descs[K_SAMC_MAX_NB_DU];

T_samc_data_msg_port_desc tr_samc_data_safb_res_can_send_descs[K_SAMC_MAX_NB_DU];
T_samc_data_msg_port_desc tr_samc_data_safb_res_can_recv_descs[K_SAMC_MAX_NB_DU];


@COMMENT@/******************************************************************************
 ***** 
 ***** void samc_data_init
 ***** 
 ***** Description :
 *****
 *****		Initialize port ID for message exchange on CAN bus and on AFDX bus.
 *****		Initialize message port descriptors (set poret info and validity). 
 ***** 
 ***** Input :
 ***** 
 *****		none.
 ***** 
 ***** Output :
 *****
 *****		none.
 ***** 
 *****************************************************************************/@/COMMENT@
void @NODE TYPE=FUNCTION NAME="samc_data_init"@@BRANCH MARK=TP ID=1 SUM=0@@LINK NAME="samc_data_init"@samc_data_init@/BRANCH@(void)
@BRANCH MARK=TB ID=48 SUM=20@{
	T_uint32	loc_i;
	T_uint32	loc_j;
	T_uint32	loc_k;
	T_uint32	loc_l;	@COMMENT@/* Index of receive cache buffer */@/COMMENT@
	T_boolean	loc_b_get_port_id;
	const T_samc_cfg_api_port_entry *loc_pr_c_api_port_entry;
	RETURN_CODE_TYPE	loc_e_return_code = NO_ACTION;

	tuc_NbMessageQueuingOL = 0;
	tuc_NbMessageQueuingIL = 0;
	tuc_NbMessageQueuingLL = 0;
	tuc_NbMessageQueuingCL = 0;
	tuc_NbMessageQueuingCR = 0;
	tuc_NbMessageQueuingOR = 0;
	tuc_NbMessageQueuingIR = 0;
	tuc_NbMessageQueuingLR = 0;
	tuc_NbMessageQueuing3C = 0;
	tuc_NbMessageQueuingStub = 0;

	@COMMENT@/* Reset the global xtalk compatibility flag */@/COMMENT@
	b_samc_crosstalk_incompatible = K_BOOL_FALSE;

	@COMMENT@/* get local DU id */@/COMMENT@
	@BRANCH MARK=TA ID=0 SUM=10@@JUMP NAME="sadi_get_local_du_id"@sadi_get_local_du_id@/JUMP@(&e_samc_data_local_du_id)@/BRANCH@;
	
	@COMMENT@/* Authorize emission of CAN message for the first cycle */@/COMMENT@
	b_samc_can_msg_emission = K_BOOL_TRUE;

	@COMMENT@/* Initialize by default with a CAN primary bus */@/COMMENT@
	e_samc_save_bus_can_active = K_SACR_CAN_PRIMARY;

	@DECISION SUM=20+21 ID=0|1@if (@POPUP@e_samc_data_local_du_id == K_SADI_DU_NONE@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=0 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=1 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=0 SUM=20@{
		@COMMENT@/* Raise a specific error */@/COMMENT@
		@BRANCH MARK=TA ID=1 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@(R_SAMC_FSC_ERR_CONFIG,
				 K_SAMC_FSC_ERR_DU_ID,
				 K_SAMC_DATA_INIT_ATT,
				 0UL,
				 0UL,
				 0UL,
				 K_NULL_PTR,
				 0UL)@/BRANCH@;
		}@/BRANCH@
	@BRANCH MARK=TB ID=1 SUM=20@else
		{
		@COMMENT@/* Nothing to do */@/COMMENT@
		}@/BRANCH@@/DECISION@

	@COMMENT@/* Initialize index of message cache buffer definition */@/COMMENT@
	loc_l = 0UL;

	@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=45 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=46 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=47 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i = 0UL; @POPUP@loc_i < R_SAMC_CFG.ul_api_port_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=2 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=3 SUM=30@False@/BRANCH@@/POPUP@; loc_i++)
		@BRANCH MARK=TB ID=44 SUM=20@{
		loc_pr_c_api_port_entry = &R_SAMC_CFG.pr_c_api_port_entry[loc_i];

		@COMMENT@/* API PORTS' INFORMATIONS */@/COMMENT@

		@COMMENT@/* Check if the API port is used for this DU position */@/COMMENT@

		@COMMENT@/* If port direction is SOURCE */@/COMMENT@
		@DECISION SUM=20+21 ID=8|15@if (@POPUP@loc_pr_c_api_port_entry->e_direction == SOURCE@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=4 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=5 SUM=30@False@/BRANCH@@/POPUP@)
			@BRANCH MARK=TB ID=8 SUM=20@{
			loc_b_get_port_id = K_BOOL_FALSE;
			@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=5 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=6 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=7 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_k = 0UL; @POPUP@loc_k < @ALT@K_SAMC_MAX_NB_DU@-ALT@9@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=6 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=7 SUM=30@False@/BRANCH@@/POPUP@@/ALT@; loc_k++)
				@BRANCH MARK=TB ID=4 SUM=20@{
				@DECISION SUM=20+21 ID=2|3@if (@POPUP@e_samc_data_local_du_id == loc_pr_c_api_port_entry->tul_du_id_out[loc_k]@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=8 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=9 SUM=30@False@/BRANCH@@/POPUP@) 
					@BRANCH MARK=TB ID=2 SUM=20@{
					@COMMENT@/* API port is used for this DU position*/@/COMMENT@
					loc_b_get_port_id = K_BOOL_TRUE;
					}@/BRANCH@
				@BRANCH MARK=TB ID=3 SUM=20@else
					{
					@COMMENT@/* Nothing to do */@/COMMENT@
					}@/BRANCH@@/DECISION@
				}@/BRANCH@
			}@/BRANCH@
		@BRANCH MARK=TB ID=15 SUM=20@else @COMMENT@/* Port direction is DESTINATION */@/COMMENT@
			{
			loc_b_get_port_id = K_BOOL_FALSE;
			@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=12 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=13 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=14 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_k = 0UL; @POPUP@loc_k < @ALT@K_SAMC_MAX_NB_DU@-ALT@9@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=10 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=11 SUM=30@False@/BRANCH@@/POPUP@@/ALT@; loc_k++)
				@BRANCH MARK=TB ID=11 SUM=20@{
				@DECISION SUM=20+21 ID=9|10@if (@POPUP@e_samc_data_local_du_id == loc_pr_c_api_port_entry->tul_du_id_in[loc_k]@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=12 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=13 SUM=30@False@/BRANCH@@/POPUP@ )
					@BRANCH MARK=TB ID=9 SUM=20@{
					@COMMENT@/* API port is used for this DU position*/@/COMMENT@
					loc_b_get_port_id = K_BOOL_TRUE;
					}@/BRANCH@
				@BRANCH MARK=TB ID=10 SUM=20@else
					{
					@COMMENT@/* Nothing to do */@/COMMENT@
					}@/BRANCH@@/DECISION@
				}@/BRANCH@
			}@/BRANCH@@/DECISION@

		@DECISION SUM=20+21 ID=16|25@if (@POPUP@loc_b_get_port_id == @ALT@K_BOOL_FALSE@-ALT@0UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=14 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=15 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
			@BRANCH MARK=TB ID=16 SUM=20@{
			@COMMENT@/* this API port will not be used for this DU position */@/COMMENT@
			loc_pr_c_api_port_entry->pr_desc->l_a653_port_id = -1L;
			loc_pr_c_api_port_entry->pr_desc->l_a653_port_id_2 = -1L;
			}@/BRANCH@
		@BRANCH MARK=TB ID=25 SUM=20@else
			{
            @DECISION SUM=20+21 ID=17|18@if (@POPUP@loc_pr_c_api_port_entry->tc_type == K_SAMPLING@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=16 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=17 SUM=30@False@/BRANCH@@/POPUP@)
            @BRANCH MARK=TB ID=17 SUM=20@{
			    @BRANCH MARK=TA ID=2 SUM=10@@JUMP NAME="GET_SAMPLING_PORT_ID"@GET_SAMPLING_PORT_ID@/JUMP@(
					    *(SAMPLING_PORT_NAME_TYPE*)loc_pr_c_api_port_entry->tc_name,
					    &loc_pr_c_api_port_entry->pr_desc->l_a653_port_id,
					    &loc_e_return_code)@/BRANCH@;
            }@/BRANCH@
            @BRANCH MARK=TB ID=18 SUM=20@else
            {
                @BRANCH MARK=TA ID=3 SUM=10@@JUMP NAME="GET_QUEUING_PORT_ID"@GET_QUEUING_PORT_ID@/JUMP@(
					    *(QUEUING_PORT_NAME_TYPE*)loc_pr_c_api_port_entry->tc_name,
					    &loc_pr_c_api_port_entry->pr_desc->l_a653_port_id,
					    &loc_e_return_code)@/BRANCH@;
            }@/BRANCH@@/DECISION@

			@DECISION SUM=20+21 ID=19|20@if (@POPUP@loc_e_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=18 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=19 SUM=30@False@/BRANCH@@/POPUP@)
				@BRANCH MARK=TB ID=19 SUM=20@{
					@COMMENT@/* Nothing to do */@/COMMENT@
				}@/BRANCH@
			@BRANCH MARK=TB ID=20 SUM=20@else
				{
				@COMMENT@/* Raise a generic error */@/COMMENT@
				@BRANCH MARK=TA ID=4 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@(R_SAMC_FSC_ERR_CONFIG,
						 K_LBFL_E_GNERR_SERV_SAMPLING_PORT_ID,
						 K_SAMC_DATA_INIT_ATT,
						 (T_uint32)loc_e_return_code,
						 0UL,
						 0UL,
						 K_NULL_PTR,
						 0UL)@/BRANCH@;
				}@/BRANCH@@/DECISION@

			@DECISION SUM=20+21 ID=21|24@if ( @POPUP@(@BRANCH MARK=TA ID=5 SUM=10@@POPUP@@JUMP NAME="lbstr_cmp"@lbstr_cmp@/JUMP@ (loc_pr_c_api_port_entry->tc_name_2, K_SAMC_SECOND_BUS_NULL)@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=20 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=21 SUM=30@False@/BRANCH@@/POPUP@@/BRANCH@) ||
				 (@POPUP@e_samc_data_local_du_id == K_SADI_DU_CL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=22 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=23 SUM=30@False@/BRANCH@@/POPUP@) ||
				 (@POPUP@e_samc_data_local_du_id == K_SADI_DU_CR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=24 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=25 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=26&29 SUM=31@lbstr_cmp (loc_pr_c_api_port_entry->tc_name_2, "")@/BRANCH@ needs
      @BRANCH MARK=TE ID=26 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=29 SUM=32@FFF@/BRANCH@=F
  @BRANCH MARK=TE ID=27&29 SUM=31@e_samc_data_local_du_id == K_SADI_DU_CL@/BRANCH@ needs
      @BRANCH MARK=TE ID=27 SUM=32@FTX@/BRANCH@=T,@BRANCH MARK=TE ID=29 SUM=32@FFF@/BRANCH@=F
  @BRANCH MARK=TE ID=28&29 SUM=31@e_samc_data_local_du_id == K_SADI_DU_CR@/BRANCH@ needs
      @BRANCH MARK=TE ID=28 SUM=32@FFT@/BRANCH@=T,@BRANCH MARK=TE ID=29 SUM=32@FFF@/BRANCH@=F@/POPUP@ )
				@BRANCH MARK=TB ID=21 SUM=20@{
				loc_pr_c_api_port_entry->pr_desc->l_a653_port_id_2 = -1L;
				}@/BRANCH@
			@BRANCH MARK=TB ID=24 SUM=20@else
				{
				@COMMENT@/* The second bus is useful : get the associated port id */@/COMMENT@
				@BRANCH MARK=TA ID=6 SUM=10@@JUMP NAME="GET_SAMPLING_PORT_ID"@GET_SAMPLING_PORT_ID@/JUMP@(
						*(SAMPLING_PORT_NAME_TYPE*)loc_pr_c_api_port_entry->tc_name_2,
						&loc_pr_c_api_port_entry->pr_desc->l_a653_port_id_2,
						&loc_e_return_code)@/BRANCH@;

				@DECISION SUM=20+21 ID=22|23@if (@POPUP@loc_e_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=30 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=31 SUM=30@False@/BRANCH@@/POPUP@)
					@BRANCH MARK=TB ID=22 SUM=20@{
					@COMMENT@/* Nothing to do */@/COMMENT@
					}@/BRANCH@
				@BRANCH MARK=TB ID=23 SUM=20@else
					{
					@COMMENT@/* Raise a generic error */@/COMMENT@
					@BRANCH MARK=TA ID=7 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@(R_SAMC_FSC_ERR_CONFIG,
							 K_LBFL_E_GNERR_SERV_SAMPLING_PORT_ID,
							 K_SAMC_DATA_INIT_ATT,
							 (T_uint32)loc_e_return_code,
							 0UL,
							 0UL,
							 K_NULL_PTR,
							 0UL)@/BRANCH@;
					}@/BRANCH@@/DECISION@
				}@/BRANCH@@/DECISION@
			}@/BRANCH@@/DECISION@

		loc_pr_c_api_port_entry->pr_desc->b_refreshed = K_BOOL_FALSE;


		@COMMENT@/* MSG PORTS' INFORMATIONS */@/COMMENT@
		@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=31 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=32 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=33 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_j = 0UL; @POPUP@loc_j < loc_pr_c_api_port_entry->ul_msg_port_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=32 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=33 SUM=30@False@/BRANCH@@/POPUP@; loc_j++)
			@BRANCH MARK=TB ID=30 SUM=20@{
			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->u_id.r_eid.us_cfg_api_idx = (T_uint16)loc_i;
			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->u_id.r_eid.us_cfg_msg_idx = (T_uint16)loc_j;
			

			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->puc_header_offset =
			loc_pr_c_api_port_entry->puc_data1 + loc_pr_c_api_port_entry->pr_c_msg_port_format[loc_j].ul_header_offset;

			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->puc_data_offset =
			loc_pr_c_api_port_entry->puc_data1 + loc_pr_c_api_port_entry->pr_c_msg_port_format[loc_j].ul_data_offset;

			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->ul_refresh_period = 0UL;
			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->ul_valid_remaining_time = 0UL;

			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->ul_msg_indice = K_SAMC_INITIAL_MSG_INDICE_VALUE;	
			loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->p_check_function =
                loc_pr_c_api_port_entry->pr_c_msg_port_format[loc_j].p_check_function;
			@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=27 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=28 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=29 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_k = 0UL; @POPUP@loc_k < @ALT@K_SAMC_MAX_NB_CAN_BUFFER@-ALT@4@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=34 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=35 SUM=30@False@/BRANCH@@/POPUP@@/ALT@; loc_k++)
				@BRANCH MARK=TB ID=26 SUM=20@{		
				loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->tul_current_buffers_size[loc_k] = K_SAMC_INIT_CAN_MSG_BUFFER_SIZE_VALUE;	
				}@/BRANCH@
			}@/BRANCH@

		@COMMENT@/* CACHE BUFFERS' INFORMATIONS */@/COMMENT@
		@DECISION SUM=20+21 ID=34|35@if (@POPUP@loc_pr_c_api_port_entry->e_direction == DESTINATION@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=36 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=37 SUM=30@False@/BRANCH@@/POPUP@)
			@BRANCH MARK=TB ID=34 SUM=20@{
			@COMMENT@/* Initialize cache receive buffers definition used in reception to receive all message in one loop */@/COMMENT@		

			@COMMENT@/* Set condition to read the message of the API port : Set to true if this is an input PORT used by the DU */@/COMMENT@
			tr_samc_data_cache_recv_buffers_def[loc_l].b_read_condition = loc_b_get_port_id;
			
			@COMMENT@/* Set index in the port api entry */@/COMMENT@
			tr_samc_data_cache_recv_buffers_def[loc_l].ul_api_port_index = loc_i;

			@COMMENT@/* Set port id (for CAN bus set by default port id of primary BUS CAN */@/COMMENT@
			tr_samc_data_cache_recv_buffers_def[loc_l].l_port_id = loc_pr_c_api_port_entry->pr_desc->l_a653_port_id;

            @COMMENT@/* Set the port type */@/COMMENT@
            tr_samc_data_cache_recv_buffers_def[loc_l].l_port_type = loc_pr_c_api_port_entry->tc_type;

			loc_l++;
			}@/BRANCH@
		@BRANCH MARK=TB ID=35 SUM=20@else
			{
				@COMMENT@/* Nothing to do */@/COMMENT@
			}@/BRANCH@@/DECISION@

		@DECISION SUM=20+21 ID=36|37@if  ( @POPUP@(@POPUP@loc_pr_c_api_port_entry->e_driver == K_SAMC_CAN_PORT@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=38 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=39 SUM=30@False@/BRANCH@@/POPUP@) &&
			  (@POPUP@loc_pr_c_api_port_entry->e_direction == DESTINATION@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=40 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=41 SUM=30@False@/BRANCH@@/POPUP@)@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=42&44 SUM=31@loc_pr_c_api_port_entry->e_driver == K_SAMC_CAN_PORT@/BRANCH@ needs
      @BRANCH MARK=TE ID=42 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=44 SUM=32@FX@/BRANCH@=F
  @BRANCH MARK=TE ID=42&43 SUM=31@loc_pr_c_api_port_entry->e_direction == DESTINATION@/BRANCH@ needs
      @BRANCH MARK=TE ID=42 SUM=32@TT@/BRANCH@=T,@BRANCH MARK=TE ID=43 SUM=32@TF@/BRANCH@=F@/POPUP@)
			@BRANCH MARK=TB ID=36 SUM=20@{ 
			@COMMENT@/* API port message buffers */@/COMMENT@            
			@BRANCH MARK=TA ID=8 SUM=10@@JUMP NAME="lbmem_set"@lbmem_set@/JUMP@(loc_pr_c_api_port_entry->puc_data1, (T_uint32)( K_SAMC_MAX_SIZE_SPORT_MSG3*K_SAMC_MAX_NB_CAN_BUFFER))@/BRANCH@;
			}@/BRANCH@
		@BRANCH MARK=TB ID=37 SUM=20@else
			{
			@COMMENT@/* API port message buffers */@/COMMENT@            
			@BRANCH MARK=TA ID=9 SUM=10@@JUMP NAME="lbmem_set"@lbmem_set@/JUMP@(loc_pr_c_api_port_entry->puc_data1, (T_uint32)loc_pr_c_api_port_entry->l_data_length)@/BRANCH@;
            @BRANCH MARK=TA ID=10 SUM=10@@JUMP NAME="lbmem_set"@lbmem_set@/JUMP@(loc_pr_c_api_port_entry->puc_data2, (T_uint32)loc_pr_c_api_port_entry->l_data_length)@/BRANCH@;
            @BRANCH MARK=TA ID=11 SUM=10@@JUMP NAME="lbmem_set"@lbmem_set@/JUMP@(loc_pr_c_api_port_entry->puc_data3, (T_uint32)loc_pr_c_api_port_entry->l_data_length)@/BRANCH@;
            @BRANCH MARK=TA ID=12 SUM=10@@JUMP NAME="lbmem_set"@lbmem_set@/JUMP@(loc_pr_c_api_port_entry->puc_data4, (T_uint32)loc_pr_c_api_port_entry->l_data_length)@/BRANCH@;
			}@/BRANCH@@/DECISION@

		@COMMENT@/* set msg port FS to FS VALUE ND (for correctness of first emitted api message and NO_ACTION treatment) */@/COMMENT@
		@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=41 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=42 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=43 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_j = 0UL; @POPUP@loc_j < loc_pr_c_api_port_entry->ul_msg_port_number@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=45 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=46 SUM=30@False@/BRANCH@@/POPUP@; loc_j++)
			@BRANCH MARK=TB ID=40 SUM=20@{
			@DECISION SUM=20+21 ID=38|39@if (@POPUP@loc_pr_c_api_port_entry->e_driver == K_SAMC_CAN_PORT@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=47 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=48 SUM=30@False@/BRANCH@@/POPUP@)
				@BRANCH MARK=TB ID=38 SUM=20@{
				*loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->puc_header_offset = 
					(T_uint8) ((*loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->puc_header_offset & ~K_SAMC_FS_CAN_HEADER_DATA_MASK) |
					K_SAMC_DATA_CAN_FS_VALUE_ND);
				}@/BRANCH@
			@BRANCH MARK=TB ID=39 SUM=20@else
				{
				*loc_pr_c_api_port_entry->pr_c_msg_port_info[loc_j].pr_desc->puc_header_offset = K_SAMC_DATA_AFDX_FS_VALUE_ND;
				}@/BRANCH@@/DECISION@	
			}@/BRANCH@
		}@/BRANCH@

	@BRANCH MARK=TP ID=0 SUM=1@return;@SHORTCUT MARK=TB ID=48@@/BRANCH@
}@/BRANCH@@/NODE@
@/NODE /RIK@
