VE 3.0d CCOV CMCDC #i3
FC "SAIDSAEB_INIT.C" "D:\\VIEWSNAP\\IC_CDS_A400M\\CDS_A400M_DEV\\SA\\SAID\\SAIDSAEB\\SRC\\"
FD 1301919390
TC PR RE AP BS BT BI BL CO CC
CE 0 "saidsaeb_init" "loc_i < K_SAIDSAEB_NB_MAX_SPORT" 273 273
AP 0 "saidsaeb_init" "GET_SAMPLING_PORT_ID" 276 278
CE 2 "saidsaeb_init" "loc_e_return_code == NO_ERROR" 281 281
BL 0 simple "saidsaeb_init" /for/then 282 284
AP 1 "saidsaeb_init" "lbfl_mng" 289 296
BL 1 simple "saidsaeb_init" /for/else 287 297
BL 2 simple "saidsaeb_init" /for 274 299
BL 3 logical "saidsaeb_init" /for/0 273 299
BL 4 logical "saidsaeb_init" /for/1 273 299
BL 5 logical "saidsaeb_init" /for/2+ 273 299
CE 4 "saidsaeb_init" "loc_i < K_SAIDSAEB_NB_MAX_QPORT" 304 304
AP 2 "saidsaeb_init" "GET_QUEUING_PORT_ID" 307 309
CE 6 "saidsaeb_init" "loc_e_return_code == NO_ERROR" 312 312
BL 6 simple "saidsaeb_init" /for/then 313 315
AP 3 "saidsaeb_init" "lbfl_mng" 320 327
BL 7 simple "saidsaeb_init" /for/else 318 328
BL 8 simple "saidsaeb_init" /for 305 330
BL 9 logical "saidsaeb_init" /for/0 304 330
BL 10 logical "saidsaeb_init" /for/1 304 330
BL 11 logical "saidsaeb_init" /for/2+ 304 330
AP 4 "saidsaeb_init" "lbtm_init" 340 340
AP 5 "saidsaeb_init" "lbtm_on" 341 341
AP 6 "saidsaeb_init" "lbtm_init" 344 344
AP 7 "saidsaeb_init" "samc_msg_port_create" 351 356
CE 8 "saidsaeb_init" "loc_e_msg_return_code ==  ..." 359 359
BL 12 simple "saidsaeb_init" /then 360 362
AP 8 "saidsaeb_init" "lbstr_len" 375 375
AP 9 "saidsaeb_init" "lbfl_mng" 368 375
BL 13 simple "saidsaeb_init" /else 365 376
AP 10 "saidsaeb_init" "CREATE_LOGBOOK" 382 387
CE 10 "saidsaeb_init" "loc_e_create_return_code ==  ..." 390 390
AP 11 "saidsaeb_init" "READ_LOGBOOK" 395 401
CE 12 "saidsaeb_init" "loc_e_return_code == NO_ERROR" 404 404
CE 14 "saidsaeb_init" "loc_e_write_status == COMPLETE" 407 407
BL 14 simple "saidsaeb_init" /then/then/then 408 411
BL 15 simple "saidsaeb_init" /then/then/else 413 415
BL 16 simple "saidsaeb_init" /then/then 405 416
CE 16 "saidsaeb_init" "loc_e_return_code == NO_ACTION" 417 417
BL 17 simple "saidsaeb_init" /then/else/then 418 420
AP 12 "saidsaeb_init" "lbfl_mng" 424 431
BL 18 simple "saidsaeb_init" /then/else/else 422 432
BL 19 simple "saidsaeb_init" /then/else 417 432
BL 20 simple "saidsaeb_init" /then 391 433
AP 13 "saidsaeb_init" "lbfl_mng" 437 444
BL 21 simple "saidsaeb_init" /else 435 445
CE 18 "saidsaeb_init" "loc_b_read_stc_logbook == 1UL" 447 447
CE 20 "saidsaeb_init" "loc_r_stc_info. ..." 454 454
BL 22 simple "saidsaeb_init" /then/then 455 460
BL 23 simple "saidsaeb_init" /then/else 462 468
BL 24 simple "saidsaeb_init" /then 448 469
BL 25 simple "saidsaeb_init" /else 471 477
AP 14 "saidsaeb_init" "saco_get_du_pph_list_and_mode" 480 480
CA 22 "saidsaeb_init" "case fdcK_MODE_SAFETY_TEST" 485 485
BL 26 simple "saidsaeb_init" /case 485 485
AP 15 "saidsaeb_init" "saexpini_get_type_of_reset" 488 488
CE 23 "saidsaeb_init" "fdcK_long_power_cut ==  ..." 488 488
AP 16 "saidsaeb_init" "saexpini_get_type_of_reset" 489 489
CE 25 "saidsaeb_init" "fdcK_other ==  ..." 489 489
CE 27 "saidsaeb_init" "saidsaeb_b_st_request == K_TRUE" 490 490
CC 29 3 23 25 27 4 TXXFTTFTFFFX 2
AP 17 "saidsaeb_init" "sadi_get_discrete" 498 498
CE 33 "saidsaeb_init" "1UL == loc_b_ground" 501 501
AP 18 "saidsaeb_init" "WRITE_LOGBOOK" 503 507
CE 35 "saidsaeb_init" "loc_e_return_code != NO_ERROR" 509 509
AP 19 "saidsaeb_init" "lbfl_mng" 511 518
BL 27 simple "saidsaeb_init" /then/then/then 510 519
BL 28 simple "saidsaeb_init" /then/then/else 521 523
BL 29 simple "saidsaeb_init" /then/then 502 524
BL 30 simple "saidsaeb_init" /then/else 526 528
BL 31 simple "saidsaeb_init" /then 491 529
BL 32 simple "saidsaeb_init" /else 531 533
CA 37 "saidsaeb_init" "case fdcK_MODE_MAINTENANCE" 537 537
BL 33 simple "saidsaeb_init" /case 537 537
CA 38 "saidsaeb_init" "default" 541 541
BL 34 simple "saidsaeb_init" /default 541 541
CE 39 "saidsaeb_init" "loc_i < 12" 557 557
BL 35 simple "saidsaeb_init" /for 558 563
BL 36 logical "saidsaeb_init" /for/0 557 563
BL 37 logical "saidsaeb_init" /for/1 557 563
BL 38 logical "saidsaeb_init" /for/2+ 557 563
PR 0 return "saidsaeb_init" 617 617
PR 1 proc "saidsaeb_init" 252 618
BL 39 simple "saidsaeb_init" / 252 618
DC 1719548348
@RIK
  TOKEN="CCOV CMCDC"
  SRC="SAIDSAEB_INIT.C"
  DIR="D:\VIEWSNAP\IC_CDS_A400M\CDS_A400M_DEV\SA\SAID\SAIDSAEB\SRC\"
  DATE=1301919390
  CHECKSUM=1719548348
  SUMS
   ("&Functions"=0,
    "-&Exits"=1,
    "Functions and exits"=0+1),
   ("&Calls"=10),
   ("Statement &blocks"=20,
    "-&Implicit blocks"=21,
    "Decisions"=20+21,
    "&Loops"=22),
   ("Basic &conditions"=30,
    "&Modified conditions"=31,
    "M&ultiple conditions"=32)
  ERRORS
    32="a source object was not linked with the right runtime object (check instrumentation mode)",
    49="a composition of conditions evaluates in an unexpected result, contact your vendor",
    50="a composition of conditions reached with an unexpected input vector, contact your vendor"
NODE TYPE=FILE NAME="SAIDSAEB_INIT.C"@@COMMENT@/******************************************************************************
 **
 **                                   ==============
 **                                   IDENTIFICATION
 **                                   ==============
 **
 **
 **
 **  Filename            : saidsaeb_init.c
 **
 **  Author/ Company     : A.CAMOU / EUROGICIEL
 **
 **  Creation date       : 06/05/03
 **
 **  Copyright statement : Copyright (C); 2002
 **                        THALES Avionics
 **
 **  Module description  : System Application Interactive Dialog
 **						   Initialize Equipment Bite System Application 
 **						   (SA-EB) datas.
 **                         
 **
 *****************************************************************************/@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Project specific includes
 *****************************************************************************/@/COMMENT@
@COMMENT@/* MACS TYPES */@/COMMENT@
@COMMENT@#include "COD_A653_API_COMMON.h"@/COMMENT@

@COMMENT@/* SA TYPES */@/COMMENT@
@COMMENT@#include "apsw_basic_types_c.h"@/COMMENT@

@COMMENT@/* PLATFORM TYPES */@/COMMENT@
@COMMENT@#include "TYP_E_LAST_RESET.t"@/COMMENT@
@COMMENT@#include "TYP_R_START_INFO.t"@/COMMENT@


@COMMENT@/* CALLED CSU TYPES */@/COMMENT@
@COMMENT@#include "lbtm.h"@/COMMENT@
@COMMENT@#include "lbfl.h"@/COMMENT@
@COMMENT@#include "said_fsc_error_desc_config.h"@/COMMENT@
@COMMENT@#include "said_component_id_ifc.h"@/COMMENT@
@COMMENT@#include "saco.h"@/COMMENT@
@COMMENT@#include "samc.h"@/COMMENT@
@COMMENT@#include "said.h"@/COMMENT@
@COMMENT@#include "sadi.h"@/COMMENT@
@COMMENT@#include "saex.h"@/COMMENT@
@COMMENT@#include "saidsaeb.h"@/COMMENT@
@COMMENT@#include "saidsaeb_pin_prog_ifc.h"@/COMMENT@
@COMMENT@#include "saidsaeb_port_ifc.h"@/COMMENT@
@COMMENT@#include "none_section.h"@/COMMENT@

@COMMENT@/* CALLED CSU PROTOTYPES */@/COMMENT@
@COMMENT@#include "lbfl_mng.p"@/COMMENT@
@COMMENT@#include "lbstr_len.p"@/COMMENT@


@COMMENT@/******************************************************************************
 **                           Module specific includes
 *****************************************************************************/@/COMMENT@

@COMMENT@#include "saidsaeb_init.p"@/COMMENT@

@COMMENT@/******************************************************************************
 **                           Local file declarations
 *****************************************************************************/@/COMMENT@

@COMMENT@/* PATCH A400M : no consumer in SOLID */@/COMMENT@
T_BOOL SAFETY_TEST_IN_PROGRESS;

@COMMENT@/* Safety Test Counter logbook id */@/COMMENT@
LOGBOOK_ID_TYPE l_said_stc_info_logbook_id;

@COMMENT@/* Elapsed time in minute */@/COMMENT@
T_uint32 ul_saidsaeb_elapsed_time;

@COMMENT@/* SAID sampling port global variable */@/COMMENT@
SAMPLING_PORT_ID_TYPE tl_saidsaeb_sport_id[K_SAIDSAEB_NB_MAX_SPORT];

@COMMENT@/* SAID queuing port global variable */@/COMMENT@
QUEUING_PORT_ID_TYPE tl_saidsaeb_qport_id[K_SAIDSAEB_NB_MAX_QPORT];

@COMMENT@/* This table is filled with "saidsaeb_port_ifc.h" ports' names */@/COMMENT@
static const SAMPLING_PORT_NAME_TYPE STC_TTC_SAISSAEB_SPORT_NAME_TABLE [K_SAIDSAEB_NB_MAX_SPORT] =
{
	K_SAIDSAEB_SPORT_BIM_ST_COUNTER_NAME,
	K_SAIDSAEB_SPORT_EBR_ST_COUNTER_NAME,
	K_SAIDSAEB_SPORT_MODE_REQUEST_NAME,
	K_SAIDSAEB_SPORT_SHOP_COUNTER_NAME,
  	K_SAIDSAEB_SPORT_BIM_FG_CONDITION_NAME
};

@COMMENT@/* This table is filled with "saidsaeb_port_ifc.h" ports' names */@/COMMENT@
static const QUEUING_PORT_NAME_TYPE STC_TTC_SAISSAEB_QPORT_NAME_TABLE [K_SAIDSAEB_NB_MAX_QPORT] =
{
	K_SAIDSAEB_QPORT_BIM_MODE_REQUEST_NAME,
    K_SAIDSAEB_QPORT_BIM_SAIA_FT_REQUEST_NAME,
	K_SAIDSAEB_QPORT_TR_REPORT_NAME
};

@COMMENT@/* Counter of safety_test_in_progress sent */@/COMMENT@
T_int32		l_said_safety_test_in_progress_counter;

@COMMENT@/* Own Pin Prog data to transmit to the BIM */@/COMMENT@
T_said_pp_array_reply r_saidsaeb_own_pp_reply;

@COMMENT@/* Timeout for K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD ms start up */@/COMMENT@
T_lib_timeout	r_said_ph_shop_counter_refresh_timeout;@COMMENT@/* Power supply hour timer*/@/COMMENT@

@COMMENT@/* Timeout for K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD ms start up */@/COMMENT@
T_lib_timeout	r_said_fh_shop_counter_refresh_timeout; @COMMENT@/* Flight hour timer */@/COMMENT@

T_int32 l_said_send_pp_identifier_port_id;

@COMMENT@/* Date and time saved in logbook */@/COMMENT@
T_said_date_utc_data		r_said_date_time_logbook;

@COMMENT@/* BIM REQUEST */@/COMMENT@
T_said_request r_said_request;

@COMMENT@/* SHOP COUNTER datas */@/COMMENT@
T_saidsaeb_shop_counter	r_said_shop_counter_data;

@COMMENT@/* Variable to store the type of maintenance test */@/COMMENT@
T_said_maint_test saidsaeb_e_maint_test;

T_boolean saidsaeb_b_st_request;

T_int32* const r_sppb_out_list[K_NB_SPPB_OUT] = { (T_int32*)&TOBITE_PPSB_01,
                                                   (T_int32*)&TOBITE_PPSB_02,
                                                   (T_int32*)&TOBITE_PPSB_03,
                                                   (T_int32*)&TOBITE_PPSB_04,
                                                   (T_int32*)&TOBITE_PPSB_05,
                                                   (T_int32*)&TOBITE_PPSB_06,
                                                   (T_int32*)&TOBITE_PPSB_07,
                                                   (T_int32*)&TOBITE_PPSB_08,
                                                   (T_int32*)&TOBITE_PPSB_09,
                                                   (T_int32*)&TOBITE_PPSB_10,
                                                   (T_int32*)&TOBITE_PPSB_11,
                                                   (T_int32*)&TOBITE_PPSB_12,
                                                   (T_int32*)&TOBITE_PPSB_13,
                                                   (T_int32*)&TOBITE_PPSB_14,
                                                   (T_int32*)&TOBITE_PPSB_15,
                                                   (T_int32*)&TOBITE_PPSB_16,
                                                   (T_int32*)&TOBITE_PPSB_17,
                                                   (T_int32*)&TOBITE_PPSB_18,
                                                   (T_int32*)&TOBITE_PPSB_19,
                                                   (T_int32*)&TOBITE_PPSB_20,
                                                   (T_int32*)&TOBITE_PPSB_21,
                                                   (T_int32*)&TOBITE_PPSB_22,
                                                   (T_int32*)&TOBITE_PPSB_23,
                                                   (T_int32*)&TOBITE_PPSB_24,
                                                   (T_int32*)&TOBITE_PPSB_25,
                                                   (T_int32*)&TOBITE_PPSB_26,
                                                   (T_int32*)&TOBITE_PPSB_27,
                                                   (T_int32*)&TOBITE_PPSB_28,
                                                   (T_int32*)&TOBITE_PPSB_29,
                                                   (T_int32*)&TOBITE_PPSB_30,
                                                   (T_int32*)&TOBITE_PPSB_31,
                                                   (T_int32*)&TOBITE_PPSB_32,
                                                   (T_int32*)&TOBITE_PPSB_33,
                                                   (T_int32*)&TOBITE_PPSB_34,
                                                   (T_int32*)&TOBITE_PPSB_35,
                                                   (T_int32*)&TOBITE_PPSB_36,
                                                   (T_int32*)&TOBITE_PPSB_37,
                                                   (T_int32*)&TOBITE_PPSB_38,
                                                   (T_int32*)&TOBITE_PPSB_39,
                                                   (T_int32*)&TOBITE_PPSB_40,
                                                   (T_int32*)&TOBITE_PPSB_41,
                                                   (T_int32*)&TOBITE_PPSB_42,
                                                   (T_int32*)&TOBITE_PPSB_43,
                                                   (T_int32*)&TOBITE_PPSB_44,
                                                   (T_int32*)&TOBITE_PPSB_45,
                                                   (T_int32*)&TOBITE_PPSB_46,
                                                   (T_int32*)&TOBITE_PPSB_47,
                                                   (T_int32*)&TOBITE_PPSB_48,
                                                   (T_int32*)&TOBITE_PPSB_49,
                                                   (T_int32*)&TOBITE_PPSB_50,
                                                   (T_int32*)&TOBITE_PPSB_51,
                                                   (T_int32*)&TOBITE_PPSB_52,
                                                   (T_int32*)&TOBITE_PPSB_53,
                                                   (T_int32*)&TOBITE_PPSB_54,
                                                   (T_int32*)&TOBITE_PPSB_55,
                                                   (T_int32*)&TOBITE_PPSB_56,
                                                   (T_int32*)&TOBITE_PPSB_57,
                                                   (T_int32*)&TOBITE_PPSB_58,
                                                   (T_int32*)&TOBITE_PPSB_59,
                                                   (T_int32*)&TOBITE_PPSB_60,
                                                   (T_int32*)&TOBITE_PPSB_61,
                                                   (T_int32*)&TOBITE_PPSB_62,
                                                   (T_int32*)&TOBITE_PPSB_63,
                                                   (T_int32*)&TOBITE_PPSB_64,
                                                   (T_int32*)&TOBITE_PPSB_65,
                                                   (T_int32*)&TOBITE_PPSB_66,
                                                   (T_int32*)&TOBITE_PPSB_67,
                                                   (T_int32*)&TOBITE_PPSB_68,
                                                   (T_int32*)&TOBITE_PPSB_69,
                                                   (T_int32*)&TOBITE_PPSB_70,
                                                   (T_int32*)&TOBITE_PPSB_71,
                                                   (T_int32*)&TOBITE_PPSB_72,
                                                   (T_int32*)&TOBITE_PPSB_73,
                                                   (T_int32*)&TOBITE_PPSB_74,
                                                   (T_int32*)&TOBITE_PPSB_75,
                                                   (T_int32*)&TOBITE_PPSB_76,
                                                   (T_int32*)&TOBITE_PPSB_77,
                                                   (T_int32*)&TOBITE_PPSB_78,
                                                   (T_int32*)&TOBITE_PPSB_79,
                                                   (T_int32*)&TOBITE_PPSB_80
                                                };

T_int32* const r_hpp_nvm_list[K_NB_HPP_NVM] = { (T_int32*)&PPHOUT01,
                                                   (T_int32*)&PPHOUT02,
                                                   (T_int32*)&PPHOUT03,
                                                   (T_int32*)&PPHOUT04,
                                                   (T_int32*)&PPHOUT05,
                                                   (T_int32*)&PPHOUT06,
                                                   (T_int32*)&PPHOUT07,
                                                   (T_int32*)&PPHOUT08,
                                                   (T_int32*)&PPHOUT09,
                                                   (T_int32*)&PPHOUT10,
                                                   (T_int32*)&PPHOUT11,
                                                   (T_int32*)&PPHOUT12,
                                                   (T_int32*)&PPHOUT13,
                                                   (T_int32*)&PPHOUT14,
                                                   (T_int32*)&PPHOUT15,
                                                   (T_int32*)&PPHOUT16,
                                                   (T_int32*)&PPHOUT17
                                                };

T_int32* const r_pp_dcp_list[K_NB_PP_DCP] = { (T_int32*)&DCP_LAMPTEST,
                                                   (T_int32*)&DCP_NVG,
                                                   (T_int32*)&DCP_DSI_SPARE_1,
                                                   (T_int32*)&DCP_DSI_SPARE_2
                                                };

@COMMENT@/******************************************************************************
 ***** 
 ***** void saidsaeb_init
 ***** 
 ***** Description :  Initialize SA-EB datas. 
 *****                Initialize DU safety test counter. 
 *****				 
 ***** Input :
 *****			none
 ***** 
 ***** Output :  
 *****			none 
 ***** 
 *****************************************************************************/@/COMMENT@
void @NODE TYPE=FUNCTION NAME="saidsaeb_init"@@BRANCH MARK=TP ID=1 SUM=0@@LINK NAME="saidsaeb_init"@saidsaeb_init@/BRANCH@(void)
@BRANCH MARK=TB ID=39 SUM=20@{
	T_uint16				loc_i;
	RETURN_CODE_TYPE		loc_e_return_code;
	RETURN_CODE_TYPE		loc_e_create_return_code;
	MESSAGE_SIZE_TYPE		loc_l_length;  
	WRITE_STATUS_TYPE		loc_e_write_status;  
	T_samc_return_code_type loc_e_msg_return_code;
	T_saidsaeb_stc_info		loc_r_stc_info;
	T_saco_du_pph_list_and_mode		loc_r_pph_list_and_mode;
	T_boolean				loc_b_read_stc_logbook;
	T_boolean				loc_b_ground;
    
	@COMMENT@/* Initialize date time saved in the logbook at the start of the DU */@/COMMENT@
	r_said_date_time_logbook.r_date.ul_bite_day = 0;
	r_said_date_time_logbook.r_date.ul_bite_month = 0;
	r_said_date_time_logbook.r_date.ul_bite_year = 0;
	r_said_date_time_logbook.r_utc.ul_bite_hour = 0;
	r_said_date_time_logbook.r_utc.ul_bite_minute = 0;
	r_said_date_time_logbook.r_utc.ul_bite_second = 0;

	@COMMENT@/* For each saidsaeb sampling port */@/COMMENT@
	@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=3 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=4 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=5 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i=0; @POPUP@loc_i < K_SAIDSAEB_NB_MAX_SPORT@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=0 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=1 SUM=30@False@/BRANCH@@/POPUP@; loc_i++)
	@BRANCH MARK=TB ID=2 SUM=20@{
		@COMMENT@/* Get the sampling port ID */@/COMMENT@
		@BRANCH MARK=TA ID=0 SUM=10@@JUMP NAME="GET_SAMPLING_PORT_ID"@GET_SAMPLING_PORT_ID@/JUMP@( (T_int8 *)STC_TTC_SAISSAEB_SPORT_NAME_TABLE[loc_i],
							  &tl_saidsaeb_sport_id[loc_i],
							  &loc_e_return_code)@/BRANCH@;

		@COMMENT@/* If no error */@/COMMENT@
		@DECISION SUM=20+21 ID=0|1@if (@POPUP@loc_e_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=2 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=3 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=0 SUM=20@{
			@COMMENT@/* Nothing to do */@/COMMENT@
		}@/BRANCH@
		@COMMENT@/* Else */@/COMMENT@
		@BRANCH MARK=TB ID=1 SUM=20@else
		{
			@COMMENT@/* Raise a generic error */@/COMMENT@
			@BRANCH MARK=TA ID=1 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@(R_SAID_FSC_ERR_CONFIG,
					 K_LBFL_E_GNERR_SERV_SAMPLING_PORT_ID,
					 K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
					 (T_uint32)loc_e_return_code,
					 0UL,
					 0UL,
					 K_NULL_PTR,
					 0UL)@/BRANCH@;
		}@/BRANCH@@/DECISION@
		@COMMENT@/* Endif */@/COMMENT@
	}@/BRANCH@
	@COMMENT@/* EndFor */@/COMMENT@	


	@COMMENT@/* For each saidsaeb queuing port */@/COMMENT@
	@POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=9 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=10 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=11 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i=0; @POPUP@loc_i < K_SAIDSAEB_NB_MAX_QPORT@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=4 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=5 SUM=30@False@/BRANCH@@/POPUP@; loc_i++)
	@BRANCH MARK=TB ID=8 SUM=20@{
		@COMMENT@/* Get the queuing port ID */@/COMMENT@
		@BRANCH MARK=TA ID=2 SUM=10@@JUMP NAME="GET_QUEUING_PORT_ID"@GET_QUEUING_PORT_ID@/JUMP@( (T_int8 *)STC_TTC_SAISSAEB_QPORT_NAME_TABLE[loc_i],
							  &tl_saidsaeb_qport_id[loc_i],
							  &loc_e_return_code)@/BRANCH@;

		@COMMENT@/* If no error */@/COMMENT@
		@DECISION SUM=20+21 ID=6|7@if (@POPUP@loc_e_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=6 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=7 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=6 SUM=20@{
			@COMMENT@/* Nothing to do */@/COMMENT@
		}@/BRANCH@
		@COMMENT@/* Else */@/COMMENT@
		@BRANCH MARK=TB ID=7 SUM=20@else
		{
			@COMMENT@/* Raise a generic error */@/COMMENT@
			@BRANCH MARK=TA ID=3 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@(R_SAID_FSC_ERR_CONFIG,
					 K_LBFL_E_GNERR_SERV_QUEUING_PORT_ID,
					 K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
					 (T_uint32)loc_e_return_code,
					 0UL,
					 0UL,
					 K_NULL_PTR,
					 0UL)@/BRANCH@;
		}@/BRANCH@@/DECISION@
		@COMMENT@/* Endif */@/COMMENT@
	}@/BRANCH@
	@COMMENT@/* Endfor */@/COMMENT@	
	
	@COMMENT@/* Set elpsed time to 0 minute */@/COMMENT@
	ul_saidsaeb_elapsed_time = 0;

	@COMMENT@/* Set safety test in progress counter to 0 */@/COMMENT@
	l_said_safety_test_in_progress_counter = 0;

	@COMMENT@/* Arm a K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD ms timeout */@/COMMENT@
	@BRANCH MARK=TA ID=4 SUM=10@@JUMP NAME="lbtm_init"@lbtm_init@/JUMP@(&r_said_ph_shop_counter_refresh_timeout, K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD)@/BRANCH@;
	@BRANCH MARK=TA ID=5 SUM=10@@JUMP NAME="lbtm_on"@lbtm_on@/JUMP@(&r_said_ph_shop_counter_refresh_timeout)@/BRANCH@;

	@COMMENT@/* Arm a K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD ms timeout */@/COMMENT@
	@BRANCH MARK=TA ID=6 SUM=10@@JUMP NAME="lbtm_init"@lbtm_init@/JUMP@(&r_said_fh_shop_counter_refresh_timeout, K_SAIDSAEB_SHOP_COUNTER_REFRESH_PERIOD)@/BRANCH@;
	@COMMENT@/* The timer is started in OPER mode if the flight ground condition is equal to flight */@/COMMENT@

	@COMMENT@/* Set safety test global variable to false */@/COMMENT@
	SAFETY_TEST_IN_PROGRESS = K_BOOL_FALSE;
	
	@COMMENT@/* Create Output message port parameters for sending the PP message */@/COMMENT@
	@BRANCH MARK=TA ID=7 SUM=10@@JUMP NAME="samc_msg_port_create"@samc_msg_port_create@/JUMP@( K_SAID_PP_REPLY_NAME,
						  (T_samc_message_size_type)   K_SAID_PP_REPLY_MAX_SIZE,
						  (T_samc_port_direction_type) K_SAID_PP_REPLY_DIRECTION,
						  (T_samc_system_time_type)	   K_SAID_PP_REPLY_REFRESH_PERIOD,
						  &l_said_send_pp_identifier_port_id,
						  &loc_e_msg_return_code)@/BRANCH@;

	@COMMENT@/* If no error while getting message port ID */@/COMMENT@
	@DECISION SUM=20+21 ID=12|13@if (@POPUP@loc_e_msg_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=8 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=9 SUM=30@False@/BRANCH@@/POPUP@)
	@BRANCH MARK=TB ID=12 SUM=20@{
		@COMMENT@/* Nothing to do */@/COMMENT@
	}@/BRANCH@
	@COMMENT@/* Else */@/COMMENT@
	@BRANCH MARK=TB ID=13 SUM=20@else
	{
	
		@COMMENT@/* Raise an error */@/COMMENT@
		@BRANCH MARK=TA ID=9 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@ (	R_SAID_FSC_ERR_CONFIG,
					K_LBFL_E_GNERR_SERV_SAMPLING_PORT_CREATE,
					K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
					(T_uint32)loc_e_msg_return_code,		   @COMMENT@/* Return code */@/COMMENT@
					0,
					0,
					(T_int8 *)K_SAID_PP_REPLY_NAME,			   @COMMENT@/* Port Name */@/COMMENT@
					@BRANCH MARK=TA ID=8 SUM=10@@JUMP NAME="lbstr_len"@lbstr_len@/JUMP@ ((T_int8 *)K_SAID_PP_REPLY_NAME)@/BRANCH@ @COMMENT@/* Area size */@/COMMENT@)@/BRANCH@;
	}@/BRANCH@@/DECISION@
	@COMMENT@/* Endif */@/COMMENT@

	loc_b_read_stc_logbook = K_BOOL_FALSE;

	@COMMENT@/* Create logbook to save Safety test counter and date in NVM */@/COMMENT@
	@BRANCH MARK=TA ID=10 SUM=10@@JUMP NAME="CREATE_LOGBOOK"@CREATE_LOGBOOK@/JUMP@ (K_STC_LOGBOK_NAME,	
				sizeof(T_saidsaeb_stc_info), 
				2,								
				K_STC_INFO_MAX_NB,   
				&l_said_stc_info_logbook_id,		
				&loc_e_create_return_code)@/BRANCH@;

	@COMMENT@/* If the creation of the logbook is ok */@/COMMENT@
	@DECISION SUM=20+21 ID=20|21@if (@POPUP@loc_e_create_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=10 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=11 SUM=30@False@/BRANCH@@/POPUP@)
	@BRANCH MARK=TB ID=20 SUM=20@{

		@COMMENT@/* Reading the logbook to get the current values of STC info 
		   (safety test counter value and date/time data */@/COMMENT@
		@BRANCH MARK=TA ID=11 SUM=10@@JUMP NAME="READ_LOGBOOK"@READ_LOGBOOK@/JUMP@ (
			l_said_stc_info_logbook_id,			
			0,
			(MESSAGE_ADDR_TYPE) &loc_r_stc_info,
			&loc_l_length, 
			&loc_e_write_status, 		
			&loc_e_return_code)@/BRANCH@;

		@COMMENT@/* If the reading is ok */@/COMMENT@
		@DECISION SUM=20+21 ID=16|19@if (@POPUP@loc_e_return_code == NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=12 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=13 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=16 SUM=20@{
			@COMMENT@/* If the write test is ok */@/COMMENT@
			@DECISION SUM=20+21 ID=14|15@if (@POPUP@loc_e_write_status == COMPLETE@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=14 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=15 SUM=30@False@/BRANCH@@/POPUP@)
			@BRANCH MARK=TB ID=14 SUM=20@{
				@COMMENT@/* Initialisation is successful */@/COMMENT@
				loc_b_read_stc_logbook = K_BOOL_TRUE;
			}@/BRANCH@
			@BRANCH MARK=TB ID=15 SUM=20@else
			{
				@COMMENT@/* Nothing to do */@/COMMENT@
			}@/BRANCH@@/DECISION@
		}@/BRANCH@
		@BRANCH MARK=TB ID=19 SUM=20@else @DECISION SUM=20+21 ID=17|18@if (@POPUP@loc_e_return_code == NO_ACTION@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=16 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=17 SUM=30@False@/BRANCH@@/POPUP@)
		@BRANCH MARK=TB ID=17 SUM=20@{
			@COMMENT@/* Nothing to do */@/COMMENT@
		}@/BRANCH@
		@BRANCH MARK=TB ID=18 SUM=20@else
		{
			@COMMENT@/* Raise a Warning */@/COMMENT@
			@BRANCH MARK=TA ID=12 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@ (	R_SAID_FSC_ERR_CONFIG,
						K_SAID_FSC_ERR_READ_LOGBOOG,
						K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
						(T_uint32)loc_e_return_code,
						0,
						0,
						K_NULL_PTR,
						0)@/BRANCH@;
		}@/BRANCH@@/DECISION@@/BRANCH@@/DECISION@
	}@/BRANCH@
	@BRANCH MARK=TB ID=21 SUM=20@else
	{
		@COMMENT@/* Raise a fatal error */@/COMMENT@
		@BRANCH MARK=TA ID=13 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@ (	R_SAID_FSC_ERR_CONFIG,
					K_SAID_FSC_ERR_CREATE_LOGBOOG,
					K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
					(T_uint32)loc_e_create_return_code,
					0,
					0,
					K_NULL_PTR,
					0)@/BRANCH@;
	}@/BRANCH@@/DECISION@

	@DECISION SUM=20+21 ID=24|25@if (@POPUP@loc_b_read_stc_logbook == @ALT@K_BOOL_TRUE@-ALT@1UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=18 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=19 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
	@BRANCH MARK=TB ID=24 SUM=20@{
		@COMMENT@/* Get value of date and time, and value of safety test counter save in the logbook */@/COMMENT@
		r_said_date_time_logbook.r_date = loc_r_stc_info.r_date_time.r_date;
		r_said_date_time_logbook.r_utc = loc_r_stc_info.r_date_time.r_utc;

		@COMMENT@/* If the SHOP COUNTER datas is already initialized */@/COMMENT@
		@DECISION SUM=20+21 ID=22|23@if (@POPUP@loc_r_stc_info.ul_shop_counter_flag_init == @ALT@K_SAIDSAEB_SHOP_COUNTER_INIT_FLAG@-ALT@0x96969696UL@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=20 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=21 SUM=30@False@/BRANCH@@/POPUP@@/ALT@)
		@BRANCH MARK=TB ID=22 SUM=20@{
			r_said_shop_counter_data.us_tsi_fh = 0; @COMMENT@/* Counter not managed by SA */@/COMMENT@
			r_said_shop_counter_data.us_tsi_ph = 0; @COMMENT@/* Counter not managed by SA */@/COMMENT@
			r_said_shop_counter_data.us_tsn_fh = loc_r_stc_info.r_shop_counter_data.us_tsn_fh;
			r_said_shop_counter_data.us_tsn_ph = loc_r_stc_info.r_shop_counter_data.us_tsn_ph;
		}@/BRANCH@
		@BRANCH MARK=TB ID=23 SUM=20@else 
		{
			@COMMENT@/* Initialization of SHOP COUNTER data */@/COMMENT@
			r_said_shop_counter_data.us_tsi_fh = 0;
			r_said_shop_counter_data.us_tsi_ph = 0;
			r_said_shop_counter_data.us_tsn_fh = 0;
			r_said_shop_counter_data.us_tsn_ph = 0;
		}@/BRANCH@@/DECISION@
	}@/BRANCH@
	@BRANCH MARK=TB ID=25 SUM=20@else
	{
		@COMMENT@/* Initialization of SHOP COUNTER datas */@/COMMENT@
		r_said_shop_counter_data.us_tsi_fh = 0;
		r_said_shop_counter_data.us_tsi_ph = 0;
		r_said_shop_counter_data.us_tsn_fh = 0;
		r_said_shop_counter_data.us_tsn_ph = 0;
	}@/BRANCH@@/DECISION@

	@COMMENT@/* Get previous mode from start info */@/COMMENT@
	@BRANCH MARK=TA ID=14 SUM=10@@JUMP NAME="saco_get_du_pph_list_and_mode"@saco_get_du_pph_list_and_mode@/JUMP@(&loc_r_pph_list_and_mode)@/BRANCH@;

	@COMMENT@/* Switch the previous_mode state  */@/COMMENT@
	@DECISION SUM=20+21 ID=26|33|34@switch (loc_r_pph_list_and_mode.ul_previous_mode)
	{
		@BRANCH MARK=TB ID=26 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=22 SUM=30@case fdcK_MODE_SAFETY_TEST :@/BRANCH@@/BRANCH@

			@COMMENT@/* if long power cut */@/COMMENT@
			@DECISION SUM=20+21 ID=31|32@if (@POPUP@(@POPUP@fdcK_long_power_cut == @BRANCH MARK=TA ID=15 SUM=10@@JUMP NAME="saexpini_get_type_of_reset"@saexpini_get_type_of_reset@/JUMP@()@/BRANCH@@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=23 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=24 SUM=30@False@/BRANCH@@/POPUP@) ||
				((@POPUP@fdcK_other == @BRANCH MARK=TA ID=16 SUM=10@@JUMP NAME="saexpini_get_type_of_reset"@saexpini_get_type_of_reset@/JUMP@()@/BRANCH@@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=25 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=26 SUM=30@False@/BRANCH@@/POPUP@) && 
				(@POPUP@saidsaeb_b_st_request == K_TRUE@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=27 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=28 SUM=30@False@/BRANCH@@/POPUP@))@-POPUP@modified and multiple conditions :
  @BRANCH MARK=TE ID=29&31|29&32 SUM=31@fdcK_long_power_cut == saexpini_get_type_of_reset ()@/BRANCH@ needs
      @BRANCH MARK=TE ID=29 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=31 SUM=32@FTF@/BRANCH@=F
   or @BRANCH MARK=TE ID=29 SUM=32@TXX@/BRANCH@=T,@BRANCH MARK=TE ID=32 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=30&32 SUM=31@fdcK_other == saexpini_get_type_of_reset ()@/BRANCH@ needs
      @BRANCH MARK=TE ID=30 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=32 SUM=32@FFX@/BRANCH@=F
  @BRANCH MARK=TE ID=30&31 SUM=31@saidsaeb_b_st_request == K_TRUE@/BRANCH@ needs
      @BRANCH MARK=TE ID=30 SUM=32@FTT@/BRANCH@=T,@BRANCH MARK=TE ID=31 SUM=32@FTF@/BRANCH@=F@/POPUP@)
			@BRANCH MARK=TB ID=31 SUM=20@{
				@COMMENT@/* Set pattern to reset safety test counter */@/COMMENT@
				@COMMENT@/* This pattern is declared in data cleared area */@/COMMENT@
				@COMMENT@/* and initialised here */@/COMMENT@
				saidsaeb_b_st_request = K_FALSE;
				
				@COMMENT@/* read ground discrete value */@/COMMENT@
				@BRANCH MARK=TA ID=17 SUM=10@@JUMP NAME="sadi_get_discrete"@sadi_get_discrete@/JUMP@ (K_SADI_GROUND_D, &loc_b_ground)@/BRANCH@;
				
				@COMMENT@/* If AIRCRAFT is on ground */@/COMMENT@
				@DECISION SUM=20+21 ID=29|30@if (@ALT@K_BOOL_TRUE@-ALT@@POPUP@1UL@/ALT@ == loc_b_ground@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=33 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=34 SUM=30@False@/BRANCH@@/POPUP@)
				@BRANCH MARK=TB ID=29 SUM=20@{
					@BRANCH MARK=TA ID=18 SUM=10@@JUMP NAME="WRITE_LOGBOOK"@WRITE_LOGBOOK@/JUMP@ (
						l_said_stc_info_logbook_id, 
						(MESSAGE_ADDR_TYPE) &loc_r_stc_info, 
						sizeof(T_saidsaeb_stc_info), 
						&loc_e_return_code)@/BRANCH@;
					
					@DECISION SUM=20+21 ID=27|28@if (@POPUP@loc_e_return_code != NO_ERROR@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=35 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=36 SUM=30@False@/BRANCH@@/POPUP@)
					@BRANCH MARK=TB ID=27 SUM=20@{
						@BRANCH MARK=TA ID=19 SUM=10@@JUMP NAME="lbfl_mng"@lbfl_mng@/JUMP@ (R_SAID_FSC_ERR_CONFIG,
							K_SAID_FSC_ERR_WRITE_LOGBOOG,
							K_SAID_SAIDSAEB_INIT_COMPONENT_ATT,
							0,
							0,
							0,
							K_NULL_PTR,
							0)@/BRANCH@;
					}@/BRANCH@
					@BRANCH MARK=TB ID=28 SUM=20@else
					{
						@COMMENT@/* Nothing to do */@/COMMENT@
					}@/BRANCH@@/DECISION@
				}@/BRANCH@
				@BRANCH MARK=TB ID=30 SUM=20@else
				{
					@COMMENT@/* Nothing to do */@/COMMENT@
				}@/BRANCH@@/DECISION@
			}@/BRANCH@
			@BRANCH MARK=TB ID=32 SUM=20@else
			{
				@COMMENT@/* Nothing to do */@/COMMENT@
			}@/BRANCH@@/DECISION@
			
		break;@SHORTCUT MARK=TB ID=26@

		@BRANCH MARK=TB ID=33 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=37 SUM=30@case fdcK_MODE_MAINTENANCE :@/BRANCH@@/BRANCH@
			@COMMENT@/* Nothing to do */@/COMMENT@	
		break;@SHORTCUT MARK=TB ID=26@ 

		@BRANCH MARK=TB ID=34 SUM=20@@BRANCH NO@@BRANCH MARK=TE ID=38 SUM=30@default :@/BRANCH@@/BRANCH@
			@COMMENT@/* Nothing to do */@/COMMENT@	
		break;@SHORTCUT MARK=TB ID=26@
	}@/BRANCH@@/BRANCH@@/BRANCH@@/DECISION@
	@COMMENT@/* Endofswitch */@/COMMENT@

    @COMMENT@/* INITIALIZE MESSAGE FOR SAIDSASB_BIM_SAIA_FUNCTION */@/COMMENT@
    r_said_request.s_test_request_id = 0UL;
    r_said_request.s_test_request_param = 0UL;
	
	r_saidsaeb_own_pp_reply.ul_sppb_out1 = 0UL;
    r_saidsaeb_own_pp_reply.ul_sppb_out2 = 0UL;
    r_saidsaeb_own_pp_reply.ul_sppb_out3 = (T_uint8)0;
    
    r_saidsaeb_own_pp_reply.uc_pp_dcp = (T_uint8)0;

    @POPUP@for@-POPUP@loop branches :
@BRANCH MARK=TB ID=36 SUM=22@  0 loop@/BRANCH@
@BRANCH MARK=TB ID=37 SUM=22@  1 loop@/BRANCH@
@BRANCH MARK=TB ID=38 SUM=22@  2 loops or more@/BRANCH@@/POPUP@ (loc_i=0 ; @POPUP@loc_i< @ALT@K_PIN_PROG_CHAR_MAX@-ALT@12@-POPUP@basic boolean conditions :
  @BRANCH MARK=TE ID=39 SUM=30@True@/BRANCH@
  @BRANCH MARK=TE ID=40 SUM=30@False@/BRANCH@@/POPUP@@/ALT@;loc_i++)
	@BRANCH MARK=TB ID=35 SUM=20@{
		r_saidsaeb_own_pp_reply.spps_out1[loc_i] = (T_uint8)0;
        r_saidsaeb_own_pp_reply.spps_out2[loc_i] = (T_uint8)0;
        r_saidsaeb_own_pp_reply.spps_out3[loc_i] = (T_uint8)0;
        r_saidsaeb_own_pp_reply.spps_out4[loc_i] = (T_uint8)0;
	}@/BRANCH@
    
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout01 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout02 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout03 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout04 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout05 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout06 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout07 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout08 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout09 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout10 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout11 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout12 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout13 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout14 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout15 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout16 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout17 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout18 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout19 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout20 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout21 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout22 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout23 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout24 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout25 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout26 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout27 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout28 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout29 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout30 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout31 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout32 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout33 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout34 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout35 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout36 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout37 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout38 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout39 = 0;
    r_saidsaeb_own_pp_reply.r_pp_rs.ppsnout40 = 0;

    r_saidsaeb_own_pp_reply.ul_hpp_nvm = 0UL;
    r_saidsaeb_own_pp_reply.uc_filler = 0UL;

	
	@COMMENT@/* Memorisation of timer before eventual short power cut */@/COMMENT@
	r_saidsaeb_memo_counter.LSB_TIME = (APEX_UNSIGNED)0;
	r_saidsaeb_memo_counter.MSB_TIME = (APEX_UNSIGNED)0;
	
	@COMMENT@/* INITIALIZE TYPE OF MAINTENANCE TEST TO "NO TEST" */@/COMMENT@
	saidsaeb_e_maint_test = K_SAID_NO_MAINT_TEST;

	@BRANCH MARK=TP ID=0 SUM=1@return;@SHORTCUT MARK=TB ID=39@@/BRANCH@
}@/BRANCH@@/NODE@
@/NODE /RIK@
